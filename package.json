{
  "name": "@sl-design-system/monorepo",
  "packageManager": "yarn@4.10.3",
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/sl-design-system/components.git"
  },
  "workspaces": [
    "chromatic",
    "examples/lit",
    "packages/angular",
    "packages/checklist",
    "packages/components/*",
    "packages/locales",
    "packages/themes/*",
    "packages/tokens",
    "scripts",
    "tools/eslint-config",
    "tools/eslint-plugin-slds",
    "tools/example-data",
    "tools/stylelint-config",
    "tools/theme-selector-plugin",
    "tools/vitest-browser-lit",
    "website"
  ],
  "scripts": {
    "build": "wireit",
    "chromatic": "yarn workspace @sl-design-system/chromatic chromatic",
    "chromatic-components": "wireit",
    "chromatic-themes": "yarn workspace @sl-design-system/chromatic themes",
    "extract-i18n": "lit-localize extract",
    "dist": "wireit",
    "import-icons": "wireit",
    "import-tokens": "yarn workspace @sl-design-system/scripts import-tokens",
    "lint": "wireit",
    "postinstall": "husky || true",
    "release": "wireit",
    "start": "wireit",
    "storybook": "wireit",
    "test": "wireit",
    "version": "wireit",
    "website": "wireit"
  },
  "wireit": {
    "build": {
      "dependencies": [
        "build:checklist",
        "build:components",
        "build:examples",
        "build:locales",
        "build:themes",
        "build:types"
      ]
    },
    "build:checklist": {
      "command": "node scripts/build-packages.js checklist",
      "clean": "if-file-deleted",
      "dependencies": [
        "build:checklist:styles"
      ],
      "files": [
        "packages/checklist/**/*.ts",
        "!packages/checklist/**/*.d.ts"
      ],
      "output": [
        "packages/checklist/**/*.js",
        "packages/checklist/**/*.js.map"
      ]
    },
    "build:checklist:styles": {
      "command": "node scripts/build-styles.js 'packages/checklist/src/checklist.scss'",
      "clean": "if-file-deleted",
      "files": [
        "packages/checklist/src/checklist.scss"
      ],
      "output": [
        "packages/checklist/src/checklist.scss.ts"
      ]
    },
    "build:components": {
      "command": "node scripts/build-packages.js components",
      "clean": "if-file-deleted",
      "dependencies": [
        "build:components:styles"
      ],
      "files": [
        "packages/components/**/*.ts",
        "!packages/components/**/*.d.ts"
      ],
      "output": [
        "packages/components/**/*.js",
        "packages/components/**/*.js.map"
      ]
    },
    "build:components:styles": {
      "command": "node scripts/build-styles.js 'packages/components/**/*.scss'",
      "clean": "if-file-deleted",
      "files": [
        "scripts/build-styles.js",
        "packages/components/**/*.scss"
      ],
      "output": [
        "packages/components/**/*.scss.ts"
      ]
    },
    "build:examples": {
      "command": "node scripts/build-packages.js examples",
      "clean": "if-file-deleted",
      "dependencies": [
        "build:examples:styles"
      ],
      "files": [
        "examples/lit/**/*.ts",
        "!examples/lit/**/*.d.ts"
      ],
      "output": [
        "examples/lit/**/*.js",
        "examples/lit/**/*.js.map"
      ]
    },
    "build:examples:styles": {
      "command": "node scripts/build-styles.js 'examples/lit/**/*.scss'",
      "clean": "if-file-deleted",
      "files": [
        "scripts/build-styles.js",
        "examples/lit/**/*.scss"
      ],
      "output": [
        "examples/lit/**/*.scss.ts"
      ]
    },
    "build:locales": {
      "command": "node scripts/build-packages.js locales",
      "dependencies": [
        "build:locales:code"
      ],
      "files": [
        "packages/locales/**/*.ts",
        "!packages/locales/**/*.d.ts"
      ],
      "output": [
        "packages/locales/**/*.js",
        "packages/locales/**/*.js.map"
      ]
    },
    "build:locales:code": {
      "command": "lit-localize build && eslint --fix 'packages/locales/src/*.ts'",
      "clean": false,
      "files": [
        "lit-localize.json",
        "packages/locales/src/*.xlf"
      ],
      "output": [
        "packages/locales/src/*.ts"
      ]
    },
    "build:themes": {
      "dependencies": [
        "build:themes:setup",
        "build:themes:code",
        "build:themes:styles"
      ]
    },
    "build:themes:code": {
      "command": "node scripts/build-packages.js themes",
      "clean": "if-file-deleted",
      "files": [
        "packages/themes/**/*.ts",
        "!packages/themes/**/*.d.ts"
      ],
      "output": [
        "packages/themes/**/*.js",
        "packages/themes/**/*.js.map"
      ]
    },
    "build:themes:setup": {
      "command": "node scripts/setup-themes.js",
      "clean": false,
      "files": [
        "scripts/setup-themes.js",
        "packages/themes/core/global.css"
      ]
    },
    "build:themes:styles": {
      "command": "node scripts/build-themes.js --studio",
      "clean": "if-file-deleted",
      "files": [
        "scripts/build-themes.js",
        "packages/tokens/src/**/*.json"
      ],
      "output": [
        "packages/themes/**/*.{css,scss}",
        "!packages/themes/*/global.css",
        "!packages/themes/*/fonts.css"
      ]
    },
    "build:types": {
      "command": "tsc --build tsconfig.all.json --pretty",
      "clean": "if-file-deleted",
      "dependencies": [
        "build:checklist:styles",
        "build:components:styles",
        "build:locales"
      ],
      "files": [
        "tsconfig.all.json",
        "examples/lit/**/*.ts",
        "!examples/lit/**/*.d.ts",
        "packages/{checklist,components,themes}/**/*.ts",
        "!packages/{checklist,components,themes}/**/*.d.ts",
        "!packages/{checklist,components,themes}/*/node_modules/**/*.ts"
      ],
      "output": [
        "examples/lit/**/tsconfig.tsbuildinfo",
        "examples/lit/**/*.d.ts",
        "packages/{checklist,components,themes}/**/tsconfig.tsbuildinfo",
        "packages/{checklist,components,themes}/**/*.d.ts",
        "!packages/{checklist,components,themes}/*/node_modules/**"
      ]
    },
    "dist": {
      "dependencies": [
        "build:components",
        "build:examples",
        "build:locales",
        "build:themes:setup",
        "build:themes:code",
        "dist:angular",
        "dist:checklist",
        "dist:components",
        "dist:themes",
        "dist:types"
      ]
    },
    "dist:angular": {
      "command": "cem analyze --config cem-angular-wrapper.config.mjs",
      "dependencies": [
        "dist:components"
      ]
    },
    "dist:checklist": {
      "command": "esbuild --minify --bundle packages/checklist/index.ts --outdir=packages/checklist/dist --sourcemap",
      "dependencies": [
        "dist:checklist:code"
      ],
      "files": [
        "packages/checklist/**/*.scss",
        "packages/checklist/**/*.ts",
        "!packages/checklist/**/*.d.ts"
      ],
      "output": [
        "packages/checklist/dist/index.js",
        "packages/checklist/dist/index.js.map"
      ]
    },
    "dist:checklist:code": {
      "command": "node scripts/build-packages.js checklist",
      "clean": "if-file-deleted",
      "dependencies": [
        "dist:checklist:styles"
      ],
      "files": [
        "packages/checklist/**/*.ts",
        "!packages/checklist/**/*.d.ts"
      ],
      "output": [
        "packages/checklist/**/*.js",
        "packages/checklist/**/*.js.map"
      ]
    },
    "dist:checklist:styles": {
      "command": "node scripts/build-styles.js 'packages/checklist/**/*.scss'",
      "clean": "if-file-deleted",
      "dependencies": [
        "dist:themes"
      ],
      "output": [
        "packages/checklist/**/*.scss.ts"
      ]
    },
    "dist:components": {
      "command": "node scripts/build-metadata.js",
      "clean": "if-file-deleted",
      "dependencies": [
        "build:components:styles"
      ],
      "files": [
        "packages/components/**/*.ts",
        "!packages/components/**/*.{d,spec,stories}.ts"
      ],
      "output": [
        "packages/components/*/custom-elements.json"
      ]
    },
    "dist:themes": {
      "command": "node scripts/build-themes.js --studio --production",
      "clean": "if-file-deleted",
      "output": [
        "packages/themes/**/*.{css,scss}",
        "!packages/themes/*/fonts.css",
        "!packages/themes/*/global.css"
      ]
    },
    "dist:types": {
      "command": "tsc --build tsconfig.all.json --pretty",
      "clean": "if-file-deleted",
      "dependencies": [
        "build:locales",
        "dist:checklist",
        "dist:components"
      ],
      "files": [
        "tsconfig.all.json",
        "examples/lit/**/*.ts",
        "!examples/lit/**/*.d.ts",
        "packages/{checklist,components,themes}/**/*.ts",
        "!packages/{checklist,components,themes}/**/*.d.ts",
        "!packages/{checklist,components,themes}/*/node_modules/**/*.ts"
      ],
      "output": [
        "examples/lit/**/tsconfig.tsbuildinfo",
        "examples/lit/**/*.d.ts",
        "packages/{checklist,components,themes}/**/tsconfig.tsbuildinfo",
        "packages/{checklist,components,themes}/**/*.d.ts",
        "!packages/{checklist,components,themes}/*/node_modules/**"
      ]
    },
    "import-icons": {
      "command": "node scripts/import-icons.js",
      "clean": false,
      "files": [
        "scripts/import-icons.js",
        "packages/tokens/src/core.json",
        "packages/tokens/src/*/base.json"
      ],
      "output": [
        "packages/themes/*/icons.ts",
        "packages/themes/*/icons/*.svg"
      ]
    },
    "lint": {
      "dependencies": [
        "lint:components:code",
        "lint:components:styles"
      ]
    },
    "lint:components:code": {
      "command": "eslint --config packages/components/eslint.config.mjs 'packages/components/**/*.ts'"
    },
    "lint:components:styles": {
      "command": "stylelint 'packages/components/**/*.{css,scss}'"
    },
    "release": {
      "command": "yarn changeset publish",
      "dependencies": [
        "dist",
        "./packages/angular:release"
      ]
    },
    "start": {
      "command": "storybook dev -p 6006 --no-open",
      "service": {
        "readyWhen": {
          "lineMatches": "Storybook \\S+ for .*web-components-vite.* started"
        }
      },
      "files": [
        ".storybook/main.ts"
      ],
      "dependencies": [
        {
          "script": "build:checklist",
          "cascade": false
        },
        {
          "script": "build:components",
          "cascade": false
        },
        {
          "script": "build:examples",
          "cascade": false
        },
        {
          "script": "build:locales",
          "cascade": false
        },
        {
          "script": "build:themes",
          "cascade": false
        },
        {
          "script": "build:types",
          "cascade": false
        }
      ]
    },
    "chromatic-components": {
      "command": "storybook build --stats-json",
      "dependencies": [
        "build"
      ]
    },
    "storybook": {
      "command": "yarn workspace @sl-design-system/angular storybook",
      "dependencies": [
        "storybook:build"
      ]
    },
    "storybook:build": {
      "command": "storybook build -o dist --quiet --stats-json",
      "dependencies": [
        "dist"
      ]
    },
    "test": {
      "dependencies": [
        "test:components",
        "test:tools"
      ]
    },
    "test:components": {
      "command": "wtr --static-logging",
      "dependencies": [
        "build:components",
        "test:setup"
      ],
      "files": [
        "web-test-runner.config.mjs",
        "packages/components/**/*.spec.ts"
      ]
    },
    "test:setup": {
      "command": "playwright install --with-deps"
    },
    "test:tools": {
      "command": "yarn workspace @sl-design-system/eslint-plugin-slds test"
    },
    "version": {
      "command": "yarn install --no-immutable",
      "dependencies": [
        "version:changeset"
      ]
    },
    "version:changeset": {
      "command": "yarn changeset version"
    },
    "website": {
      "dependencies": [
        "./website:build"
      ]
    }
  },
  "devDependencies": {
    "@changesets/cli": "^2.29.7",
    "@changesets/get-github-info": "^0.6.0",
    "@custom-elements-manifest/analyzer": "^0.10.6",
    "@lit/localize-tools": "^0.8.0",
    "@open-wc/testing": "^4.0.0",
    "@storybook/addon-a11y": "^9.1.8",
    "@storybook/addon-docs": "^9.1.8",
    "@storybook/addon-vitest": "^9.1.8",
    "@storybook/web-components": "^9.1.8",
    "@storybook/web-components-vite": "^9.1.8",
    "@types/chai-as-promised": "^8.0.2",
    "@types/chai-dom": "^1.11.3",
    "@types/mocha": "^10.0.10",
    "@types/sinon": "^17.0.4",
    "@types/sinon-chai": "^4.0.0",
    "@vitest/browser": "^3.2.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@web/dev-server-esbuild": "^1.0.4",
    "@web/test-runner": "^0.20.2",
    "@web/test-runner-commands": "^0.9.0",
    "@web/test-runner-playwright": "^0.11.1",
    "@webcomponents/scoped-custom-element-registry": "^0.0.10",
    "chai": "^6.0.1",
    "chai-as-promised": "^8.0.2",
    "chai-dom": "^1.12.1",
    "chromatic": "^13.2.0",
    "eslint": "^9.27.0",
    "husky": "^9.1.7",
    "lint-staged": "^16.2.0",
    "lit": "^3.3.1",
    "playwright": "^1.55.1",
    "sinon": "^21.0.0",
    "sinon-chai": "^4.0.1",
    "storybook": "^9.1.8",
    "stylelint": "^16.19.1",
    "typescript": "^5.5.4",
    "vite": "^7.1.7",
    "vitest": "^3.2.4",
    "wireit": "^0.14.12"
  }
}
