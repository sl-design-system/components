$fills: solid, outline, link, ghost;
$sizes: sm, md, lg;
$variants: default, primary, success, warning, danger;

:host {
  --_animation: var(--sl-animation-button);
  --_background: var(--sl-color-button-default-idle-background);
  --_transition-duration: var(--sl-animation-button-duration);
  --_transition-easing: var(--sl-animation-button-easing);
  --_focus-outline: var(--sl-color-focusring-default) solid var(--sl-border-width-focusring-default);
  --_focus-outline-offset: var(--sl-border-width-focusring-offset);
}

@each $fill in $fills {
  :host([fill='#{$fill}']) {
    --_border-width: var(--sl-border-width-button-#{$fill});
  }

  @each $variant in $variants {
    :host([fill='#{$fill}'][variant='#{$variant}']:not([popover-opened])) {
      --_background: var(--sl-color-button-#{$variant}-#{$fill}-idle-background);
      --_border-color: var(--sl-color-button-#{$variant}-#{$fill}-idle-border);
      --_color: var(--sl-color-button-#{$variant}-#{$fill}-idle-foreground);
      --_transform: var(--sl-transform-button-#{$variant}-#{$fill}-idle);
    }

    :host([fill='#{$fill}'][variant='#{$variant}']:not(:disabled, [internals-disabled]):hover, [popover-opened]) {
      --_background: var(--sl-color-button-#{$variant}-#{$fill}-hover-background);
      --_border-color: var(--sl-color-button-#{$variant}-#{$fill}-hover-border);
      --_color: var(--sl-color-button-#{$variant}-#{$fill}-hover-foreground);
      --_transform: var(--sl-transform-button-#{$variant}-#{$fill}-hover);
    }

    :host([fill='#{$fill}'][variant='#{$variant}']:not(:disabled, [internals-disabled]):active),
    :host([fill='#{$fill}'][variant='#{$variant}'][popover-opened]) {
      --_background: var(--sl-color-button-#{$variant}-#{$fill}-active-background);
      --_border-color: var(--sl-color-button-#{$variant}-#{$fill}-active-border);
      --_color: var(--sl-color-button-#{$variant}-#{$fill}-active-foreground);
      --_transform: var(--sl-transform-button-#{$variant}-#{$fill}-active);
    }

    :host([fill='#{$fill}'][variant='#{$variant}']:where(:disabled, [internals-disabled])) {
      --_background: var(--sl-color-button-#{$variant}-#{$fill}-disabled-background);
      --_border-color: var(--sl-color-button-#{$variant}-#{$fill}-disabled-border);
      --_color: var(--sl-color-button-#{$variant}-#{$fill}-disabled-foreground);
      --_transform: var(--sl-transform-button-#{$variant}-#{$fill}-disabled);
    }

    :host([fill='#{$fill}'][variant='#{$variant}']:not(:disabled, [internals-disabled]):focus-visible) {
      --_border-color: var(--sl-color-button-#{$variant}-#{$fill}-focus-border);
      --_transform: var(--sl-transform-button-#{$variant}-#{$fill}-focus);
    }
  }
}

@each $size in $sizes {
  :host([size='#{$size}']) {
    --icon-container-size: var(--sl-size-button-icon-#{$size});
    --_border-radius: var(--sl-border-radius-button-#{$size});
    --_font: var(--sl-text-button-text-#{$size});
    --_label-gap: var(--sl-space-button-gap-#{$size});
  }
  :host([size='#{$size}'][fill='link']) {
    --_font: var(--sl-text-button-link-#{$size});
  }

  :host([size='#{$size}'][icon-only]) {
    --icon-container-size: var(--sl-size-button-icon-container-icon-only-#{$size});
    --_border-radius: var(--sl-border-radius-button-icon-only-#{$size});
    line-height: var(--sl-size-button-icon-container-icon-only-#{$size});
  }

  @each $fill in $fills {
    :host([size='#{$size}'][fill='#{$fill}']) {
      --_padding-block: var(--sl-space-button-#{$fill}-block-#{$size});
      --_padding-inline: var(--sl-space-button-#{$fill}-inline-#{$size});
    }
    :host([size='#{$size}'][size='#{$size}'][icon-only]) {
      --_padding-block: var(--sl-space-button-#{$fill}-icon-only-#{$size});
      --_padding-inline: var(--sl-space-button-#{$fill}-icon-only-#{$size});
    }
  }
}

:host {
  align-items: center;
  background: var(--_background);
  border: var(--_border-width) solid var(--_border-color);
  border-radius: var(--_border-radius);
  color: var(--_color);
  cursor: pointer;
  display: inline-flex;
  font: var(--_font);
  gap: var(--_label-gap);
  justify-content: center;
  outline-color: transparent;
  padding-block: var(--_padding-block);
  padding-inline: var(--_padding-inline);
  transform: var(--_transform);
  vertical-align: top;
}

:host(:focus),
:host(:focus-visible) {
  outline: var(--_focus-outline);
  outline-offset: var(--_focus-outline-offset);
}

:host(:where(:active, :focus-visible, :hover)) {
  transition-duration: var(--_transition-duration);
  transition-property: background, border-color, color, outline-color;
  transition-timing-function: var(--_transition-easing);
}

:host(:where(:disabled, [internals-disabled])) {
  cursor: default;
  pointer-events: none;
}

:host([fill='link']) {
  text-decoration: underline;
}

::slotted(sl-icon) {
  fill: var(--_color);
}
