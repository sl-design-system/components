{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/checkbox.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/checkbox-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "register.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sl-checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "/src/checkbox.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sl-checkbox-group",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "/src/checkbox-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/checkbox-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox group; treat a group of checkboxes as one form input with validation, hints and errors",
          "name": "CheckboxGroup",
          "slots": [
            {
              "description": "A list of `sl-checkbox` elements.",
              "name": "default"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the group is disabled; when set no interaction is possible.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "At least one checkbox in the group must be checked if true.",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "CheckboxSize | undefined"
              },
              "description": "The size of the checkboxes in the group.",
              "attribute": "size"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the group is disabled; when set no interaction is possible.",
              "fieldName": "disabled"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "At least one checkbox in the group must be checked if true.",
              "fieldName": "required"
            },
            {
              "name": "size",
              "type": {
                "text": "CheckboxSize | undefined"
              },
              "description": "The size of the checkboxes in the group.",
              "fieldName": "size"
            }
          ],
          "mixins": [
            {
              "name": "FormControlMixin",
              "package": "@sl-design-system/form"
            },
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-checkbox-group",
          "customElement": true,
          "methods": [
            {
              "kind": "method",
              "name": "#onClick",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onSlotchange",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "fields": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "type": {
                "text": "ScopedElementsMap"
              },
              "static": true,
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#mutation",
              "privacy": "private",
              "default": "new MutationController(this, {\n    callback: async () => {\n      // Workaround for https://github.com/lit/lit/issues/3597\n      await this.updateComplete;\n\n      this.value = this.boxes?.map(box => !!box.checked);\n    },\n    config: { attributeFilter: ['checked'], attributeOldValue: true, subtree: true }\n  })",
              "description": "Observe changes to the checkboxes."
            },
            {
              "kind": "field",
              "name": "#rovingTabindexController",
              "privacy": "private",
              "default": "new RovingTabindexController<Checkbox>(this, {\n    focusInIndex: (elements: Checkbox[]) => elements.findIndex(el => !el.disabled),\n    elements: () => this.boxes || [],\n    isFocusableElement: (el: Checkbox) => !el.disabled\n  })",
              "description": "Manage the keyboard navigation."
            },
            {
              "kind": "field",
              "name": "internals",
              "readonly": true,
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "boxes",
              "type": {
                "text": "Checkbox[] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "boolean[] | undefined"
              },
              "description": "The value for the checkbox group, for internal use.",
              "privacy": "private"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "src/checkbox-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/checkbox.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A checkbox with 3 states; unchecked, checked and intermediate.",
          "name": "Checkbox",
          "cssParts": [
            {
              "description": "The checkbox's wrapper",
              "name": "wrapper"
            }
          ],
          "slots": [
            {
              "description": "Text label of the checkbox. Technically there are no limits what can be put here; text, images, icons etc.",
              "name": "default"
            }
          ],
          "members": [
            {
              "kind": "event",
              "name": "change",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "description": "Emits when the checked state changes."
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the checkbox is checked.",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the checkbox is disabled; when set no interaction is possible.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the checkbox has the indeterminate state.",
              "attribute": "indeterminate",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the checkbox is required.",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'md' | 'lg'"
              },
              "default": "'md'",
              "description": "The size of the checkbox",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "description": "The value for the checkbox, to be used in forms.",
              "attribute": "value"
            }
          ],
          "events": [
            {
              "name": "change",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "description": "Emits when the checked state changes.",
              "fieldName": "change"
            }
          ],
          "attributes": [
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the checkbox is checked.",
              "fieldName": "checked"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the checkbox is disabled; when set no interaction is possible.",
              "fieldName": "disabled"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the checkbox has the indeterminate state.",
              "fieldName": "indeterminate"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the checkbox is required.",
              "fieldName": "required"
            },
            {
              "name": "size",
              "type": {
                "text": "'md' | 'lg'"
              },
              "default": "'md'",
              "description": "The size of the checkbox",
              "fieldName": "size"
            },
            {
              "name": "value",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "description": "The value for the checkbox, to be used in forms.",
              "fieldName": "value"
            }
          ],
          "mixins": [
            {
              "name": "FormControlMixin",
              "package": "@sl-design-system/form"
            },
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-checkbox",
          "customElement": true,
          "methods": [
            {
              "kind": "method",
              "name": "#onClick",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onKeydown",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateNoLabel",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "fields": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "type": {
                "text": "ScopedElementsMap"
              },
              "static": true,
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true }",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#initialState",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "The initial state when the form was associated with the checkbox. Used to reset the checkbox."
            },
            {
              "kind": "field",
              "name": "internals",
              "readonly": true,
              "privacy": "private"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "src/checkbox.ts"
          }
        }
      ]
    }
  ]
}
