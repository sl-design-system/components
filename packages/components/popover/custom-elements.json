{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/mixins/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/popover.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/types.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "register.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sl-popover",
          "declaration": {
            "name": "Popover",
            "module": "/src/popover.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/popover.scss.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/popover.scss.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/popover.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base popover web component.",
          "name": "Popover",
          "cssParts": [
            {
              "description": "The container for the popover",
              "name": "container"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "addEventListenersToAnchor",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AnchoredMixin",
                "module": "src/mixins/anchored.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchorElement",
              "type": {
                "text": "HTMLElement | undefined"
              },
              "inheritedFrom": {
                "name": "AnchoredMixin",
                "module": "src/mixins/anchored.ts"
              }
            },
            {
              "kind": "field",
              "name": "arrow",
              "type": {
                "text": "HTMLElement | undefined"
              },
              "description": "The arrow linking the popover to the anchor element.",
              "inheritedFrom": {
                "name": "AnchoredPopoverMixin",
                "module": "src/mixins/anchored-popover.ts"
              }
            },
            {
              "kind": "field",
              "name": "cleanupFloatingUI",
              "type": {
                "text": "() => void | undefined"
              },
              "description": "Cleanup callback for floating-ui.",
              "inheritedFrom": {
                "name": "AnchoredPopoverMixin",
                "module": "src/mixins/anchored-popover.ts"
              }
            },
            {
              "kind": "method",
              "name": "cleanupPopover",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AnchoredPopoverMixin",
                "module": "src/mixins/anchored-popover.ts"
              }
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AnchoredMixin",
                "module": "src/mixins/anchored.ts"
              }
            },
            {
              "kind": "method",
              "name": "hidePopover",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the popover is open or not.",
              "attribute": "open",
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "Placement"
              },
              "default": "'top'",
              "description": "Popover placement relative to the anchor.",
              "attribute": "placement",
              "inheritedFrom": {
                "name": "AnchoredPopoverMixin",
                "module": "src/mixins/anchored-popover.ts"
              }
            },
            {
              "kind": "field",
              "name": "popoverOpen",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "method",
              "name": "positionPopover",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "field",
              "name": "receivesFocus",
              "type": {
                "text": "'auto' | undefined"
              },
              "attribute": "receives-focus",
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListenersFromAnchor",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AnchoredMixin",
                "module": "src/mixins/anchored.ts"
              }
            },
            {
              "kind": "method",
              "name": "showPopover",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "placement",
              "type": {
                "text": "Placement"
              },
              "default": "'top'",
              "description": "Popover placement relative to the anchor.",
              "fieldName": "placement"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the popover is open or not.",
              "fieldName": "open",
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "name": "receives-focus",
              "type": {
                "text": "'auto' | undefined"
              },
              "fieldName": "receivesFocus",
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "AnchoredPopoverMixin",
              "module": "/src/mixins/anchored-popover.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-popover",
          "customElement": true,
          "events": [
            {
              "name": "popovershow",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "name": "popoverhide",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Popover",
          "declaration": {
            "name": "Popover",
            "module": "src/popover.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./position-anchored-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/position-anchored-element.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "flipPlacement",
          "return": {
            "type": {
              "text": "Placement"
            }
          },
          "parameters": [
            {
              "name": "placement",
              "type": {
                "text": "Placement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "positionAnchoredElement",
          "return": {
            "type": {
              "text": "(() => void)"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "options",
              "type": {
                "text": "PositionAnchoredElementOptions"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Placement",
          "declaration": {
            "name": "Placement",
            "module": "src/utils/position-anchored-element.ts"
          }
        },
        {
          "kind": "js",
          "name": "flipPlacement",
          "declaration": {
            "name": "flipPlacement",
            "module": "src/utils/position-anchored-element.ts"
          }
        },
        {
          "kind": "js",
          "name": "positionAnchoredElement",
          "declaration": {
            "name": "positionAnchoredElement",
            "module": "src/utils/position-anchored-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/anchored-popover.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "AnchoredPopoverMixin",
          "members": [
            {
              "kind": "method",
              "name": "addEventListenersToAnchor",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AnchoredMixin",
                "module": "src/mixins/anchored.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchorElement",
              "type": {
                "text": "HTMLElement | undefined"
              },
              "inheritedFrom": {
                "name": "AnchoredMixin",
                "module": "src/mixins/anchored.ts"
              }
            },
            {
              "kind": "field",
              "name": "arrow",
              "type": {
                "text": "HTMLElement | undefined"
              },
              "description": "The arrow pointing to the anchor element."
            },
            {
              "kind": "field",
              "name": "cleanupFloatingUI",
              "type": {
                "text": "() => void | undefined"
              },
              "description": "Cleanup callback for floating-ui."
            },
            {
              "kind": "method",
              "name": "cleanupPopover",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AnchoredMixin",
                "module": "src/mixins/anchored.ts"
              }
            },
            {
              "kind": "method",
              "name": "hidePopover",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the popover is open or not.",
              "attribute": "open",
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "Placement"
              },
              "default": "'bottom'",
              "description": "The placement of the popover relative to the anchor element."
            },
            {
              "kind": "field",
              "name": "popoverOpen",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "method",
              "name": "positionPopover",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "field",
              "name": "receivesFocus",
              "type": {
                "text": "'auto' | undefined"
              },
              "attribute": "receives-focus",
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListenersFromAnchor",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AnchoredMixin",
                "module": "src/mixins/anchored.ts"
              }
            },
            {
              "kind": "method",
              "name": "showPopover",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "AnchoredMixin",
              "module": "/src/mixins/anchored.js"
            },
            {
              "name": "PopoverMixin",
              "module": "/src/mixins/popover.js"
            }
          ],
          "parameters": [
            {
              "name": "constructor",
              "type": {
                "text": "T"
              }
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the popover is open or not.",
              "fieldName": "open",
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "name": "receives-focus",
              "type": {
                "text": "'auto' | undefined"
              },
              "fieldName": "receivesFocus",
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            }
          ],
          "events": [
            {
              "name": "popovershow",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            },
            {
              "name": "popoverhide",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "PopoverMixin",
                "module": "src/mixins/popover.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AnchoredPopoverMixin",
          "declaration": {
            "name": "AnchoredPopoverMixin",
            "module": "src/mixins/anchored-popover.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/anchored.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "AnchoredMixin",
          "members": [
            {
              "kind": "method",
              "name": "addEventListenersToAnchor",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "anchorElement",
              "type": {
                "text": "HTMLElement | undefined"
              }
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeEventListenersFromAnchor",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "parameters": [
            {
              "name": "constructor",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AnchoredMixin",
          "declaration": {
            "name": "AnchoredMixin",
            "module": "src/mixins/anchored.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./anchored.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./anchored-popover.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./popover.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/popover.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "popoverMixinStyles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "css`\n  @supports selector(:open) {\n    :host(:open) {\n      display: flex;\n      opacity: 1;\n      pointer-events: auto;\n    }\n  }\n\n  @supports not selector(:open) {\n    :host([popover-open]) {\n      display: flex;\n      opacity: 1;\n      pointer-events: auto;\n    }\n  }\n\n  :host {\n    background: none;\n    border: 0;\n    display: flex;\n    left: 0;\n    margin: 0;\n    opacity: 0;\n    overflow: visible;\n    padding: 0;\n    pointer-events: none;\n    position: fixed;\n    top: 0;\n  }\n`"
        },
        {
          "kind": "mixin",
          "description": "",
          "name": "PopoverMixin",
          "members": [
            {
              "kind": "method",
              "name": "hidePopover",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the popover is open or not.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "popoverOpen",
              "type": {
                "text": "boolean"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "positionPopover",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "receivesFocus",
              "type": {
                "text": "'auto' | undefined"
              },
              "attribute": "receives-focus"
            },
            {
              "kind": "method",
              "name": "showPopover",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "popovershow",
              "type": {
                "text": "Event"
              }
            },
            {
              "name": "popoverhide",
              "type": {
                "text": "Event"
              }
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the popover is open or not.",
              "fieldName": "open"
            },
            {
              "name": "receives-focus",
              "type": {
                "text": "'auto' | undefined"
              },
              "fieldName": "receivesFocus"
            }
          ],
          "parameters": [
            {
              "name": "constructor",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "popoverMixinStyles",
          "declaration": {
            "name": "popoverMixinStyles",
            "module": "src/mixins/popover.ts"
          }
        },
        {
          "kind": "js",
          "name": "PopoverMixin",
          "declaration": {
            "name": "PopoverMixin",
            "module": "src/mixins/popover.ts"
          }
        }
      ]
    }
  ]
}
