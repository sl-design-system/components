$variants: default, valid, invalid;
$variant-selectors: ':not([valid],[invalid])', ':where([valid])', ':where([invalid])';
$states: unchecked, checked;
$state-selectors: '', '[checked]';
$sizes: md, lg;

:host {
  --_border-radius: var(--sl-border-radius-circle);
  --_border-size: var(--sl-border-width-input-border);
  --_border: var(--_border-size) solid var(--_border-color);
  --_gap: var(--sl-space-input-option-gap-md);
  --_line-height: var(--sl-text-typeset-line-height-md);
  --_transition: 200ms ease-in-out;
  --sl-size-input-icon-size-md: 20px;
  --sl-size-input-icon-size-lg: 28px;
  --_focus-outline: var(--sl-color-focusring-default) solid var(--sl-border-width-focusring-default);
  --_focus-outline-offset: var(--sl-border-width-focusring-offset);
}

@each $size in $sizes {
  :host([size='#{$size}']) {
    --_line-height: var(--sl-text-typeset-line-height-#{$size});
    --_padding: var(--sl-space-input-option-block-#{$size})
      var(--sl-space-input-option-inline-#{$size})
      var(--sl-space-input-option-block-#{$size})
      0;
    --_gap: var(--sl-space-input-option-gap-#{$size});
    --_size: var(--sl-size-input-option-#{$size});
    --_icon-size: var(--sl-size-input-icon-size-#{$size});
    --_font: var(--sl-text-input-option-#{$size});
  }
}

@each $variant in $variants {
  $i: index($variants, $variant);
  $variant-selector: nth($variant-selectors, $i);

  @each $state in $states {
    $j: index($states, $state);
    $state-selector: nth($state-selectors, $j);

    :host(#{$variant-selector + $state-selector}) {
      --_background: var(--sl-color-input-option-#{$variant}-#{$state}-default-background);
      --_border-color: var(--sl-color-input-option-#{$variant}-#{$state}-default-border);
      --_label-color: var(--sl-color-input-option-#{$variant}-#{$state}-default-label);
      --_fill: var(--sl-color-input-option-#{$variant}-#{$state}-default-icon);
    }

    :host(#{$variant-selector + $state-selector}:not([disabled]):hover) {
      --_background: var(--sl-color-input-option-#{$variant}-#{$state}-hover-background);
      --_border-color: var(--sl-color-input-option-#{$variant}-#{$state}-hover-border);
      --_label-color: var(--sl-color-input-option-#{$variant}-#{$state}-hover-label);
      --_fill: var(--sl-color-input-option-#{$variant}-#{$state}-hover-icon);
    }

    :host(#{$variant-selector + $state-selector}:not([disabled]):active) {
      --_background: var(--sl-color-input-option-#{$variant}-#{$state}-active-background);
      --_border-color: var(--sl-color-input-option-#{$variant}-#{$state}-active-border);
      --_label-color: var(--sl-color-input-option-#{$variant}-#{$state}-active-label);
      --_fill: var(--sl-color-input-option-#{$variant}-#{$state}-active-icon);
    }

    :host(#{$variant-selector + $state-selector}:not([disabled]):focus-visible) {
      --_background: var(--sl-color-input-option-#{$variant}-#{$state}-focus-background);
      --_border-color: var(--sl-color-input-option-#{$variant}-#{$state}-focus-border);
      --_label-color: var(--sl-color-input-option-#{$variant}-#{$state}-focus-label);
      --_fill: var(--sl-color-input-option-#{$variant}-#{$state}-focus-icon);
    }

    :host(#{$variant-selector + $state-selector}:where([disabled])) {
      --_background: var(--sl-color-input-option-#{$variant}-#{$state}-disabled-background);
      --_border-color: var(--sl-color-input-option-#{$variant}-#{$state}-disabled-border);
      --_label-color: var(--sl-color-input-option-#{$variant}-#{$state}-disabled-label);
      --_fill: var(--sl-color-input-option-#{$variant}-#{$state}-disabled-icon);
    }
  }
}

:host {
  align-items: start;
  color: var(--_label-color);
  cursor: pointer;
  display: inline-flex;
  font: var(--_font);
  gap: var(--_gap);
  line-height: var(--_line-height);
  outline: none;
  padding: var(--_padding);
}

:host(:where(:active, :focus-visible, :hover)) .box {
  transition: var(--_transition);
  transition-property: background, border-color, color, filter, outline-color;
}

:host(:focus-visible) .box {
  outline: var(--_focus-outline);
  outline-offset: var(--_focus-outline-offset);
}

:host([disabled]) {
  cursor: default;
  pointer-events: none;
}

.box {
  background: var(--_background);
  border: var(--_border);
  border-radius: var(--_border-radius);
  display: inline-flex;
  flex-shrink: 0;
  outline-color: transparent;
  padding: calc((var(--_size) - var(--_icon-size)) / 2 - var(--_border-size));
}

.label {
  margin-block-start: calc((var(--_size) - var(--_line-height)) / 2);
}

svg {
  block-size: var(--_icon-size);
  fill: none;
  inline-size: var(--_icon-size);
}

circle {
  fill: var(--_fill, transparent);
}
