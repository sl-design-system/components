{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/select.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/select-option.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/select-option-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "register.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sl-select",
          "declaration": {
            "name": "Select",
            "module": "/src/select.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sl-select-option",
          "declaration": {
            "name": "SelectOption",
            "module": "/src/select-option.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sl-select-option-group",
          "declaration": {
            "name": "SelectOptionGroup",
            "module": "/src/select-option-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/select-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectButton",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the button is disabled.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "The placeholder for when there is no selected option.s",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "SelectOption | null | undefined"
              },
              "description": "The selected option."
            },
            {
              "kind": "field",
              "name": "showValid",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Indicates whether the control should indicate it is valid.",
              "attribute": "show-valid",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "showValidity",
              "type": {
                "text": "FormControlShowValidity"
              },
              "description": "Mirrors the same property on the sl-select parent.",
              "attribute": "show-validity",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "SelectSize | undefined"
              },
              "default": "'md'",
              "description": "The size of the parent select.",
              "attribute": "size",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the button is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "The placeholder for when there is no selected option.s",
              "fieldName": "placeholder"
            },
            {
              "name": "size",
              "type": {
                "text": "SelectSize | undefined"
              },
              "default": "'md'",
              "description": "The size of the parent select.",
              "fieldName": "size"
            },
            {
              "name": "show-valid",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Indicates whether the control should indicate it is valid.",
              "fieldName": "showValid"
            },
            {
              "name": "show-validity",
              "type": {
                "text": "FormControlShowValidity"
              },
              "description": "Mirrors the same property on the sl-select parent.",
              "fieldName": "showValidity"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements/lit-element.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true,
          "methods": [],
          "fields": [
            {
              "kind": "field",
              "name": "scopedElements",
              "type": {
                "text": "ScopedElementsMap"
              },
              "static": true,
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "SelectOption | null | undefined"
              },
              "description": "The selected option."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectButton",
          "declaration": {
            "name": "SelectButton",
            "module": "src/select-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/select-option-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A way to group options together, with or without a heading.\n\n```html\n <sl-select>\n   <sl-select-option-group heading=\"Europe\">\n     <sl-select-option>Netherlands</sl-select-option>\n     <sl-select-option>Spain</sl-select-option>\n     <sl-select-option>Poland</sl-select-option>\n   </sl-select-option-group>\n   ...\n </sl-select>\n```",
          "name": "SelectOptionGroup",
          "slots": [
            {
              "description": "List of `sl-select-option` elements",
              "name": "default"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | undefined"
              },
              "description": "The heading for the group.",
              "attribute": "heading"
            }
          ],
          "attributes": [
            {
              "name": "heading",
              "type": {
                "text": "string | undefined"
              },
              "description": "The heading for the group.",
              "fieldName": "heading"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-select-option-group",
          "customElement": true,
          "methods": [],
          "fields": []
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectOptionGroup",
          "declaration": {
            "name": "SelectOptionGroup",
            "module": "src/select-option-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/select-option.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectOption",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the option item is disabled.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the option item is selected.",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "T | undefined"
              },
              "description": "The value for the option item, to be used in forms.",
              "attribute": "value"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the option item is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the option item is selected.",
              "fieldName": "selected"
            },
            {
              "name": "value",
              "type": {
                "text": "T | undefined"
              },
              "description": "The value for the option item, to be used in forms.",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-select-option",
          "customElement": true,
          "methods": [],
          "fields": []
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectOption",
          "declaration": {
            "name": "SelectOption",
            "module": "src/select-option.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/select.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Select",
          "slots": [
            {
              "description": "Place for `sl-select-option` elements",
              "name": "default"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "SelectButton"
              },
              "description": "The button in the light DOM."
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the select is disabled; when set no interaction is possible.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "listbox",
              "type": {
                "text": "HTMLElement"
              },
              "description": "The listbox element."
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "The placeholder text to show when no option is chosen.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the select is a required field.",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "showValid",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "When set will cause the control to show it is valid after reportValidity is called.",
              "attribute": "show-valid"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "SelectSize"
              },
              "default": "'md'",
              "description": "The size of the select.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "event",
              "name": "sl-blur",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the focus leaves the component."
            },
            {
              "kind": "event",
              "name": "sl-change",
              "type": {
                "text": "EventEmitter<T | undefined>"
              },
              "description": "Emits when the value changes."
            },
            {
              "kind": "event",
              "name": "sl-focus",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the component gains focus."
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "T | undefined"
              },
              "description": "The value for the select, to be used in forms.",
              "attribute": "value"
            }
          ],
          "events": [
            {
              "name": "blurEvent",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the focus leaves the component.",
              "fieldName": "blurEvent"
            },
            {
              "name": "changeEvent",
              "type": {
                "text": "EventEmitter<T | undefined>"
              },
              "description": "Emits when the value changes.",
              "fieldName": "changeEvent"
            },
            {
              "name": "focusEvent",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the component gains focus.",
              "fieldName": "focusEvent"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the select is disabled; when set no interaction is possible.",
              "fieldName": "disabled"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "The placeholder text to show when no option is chosen.",
              "fieldName": "placeholder"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the select is a required field.",
              "fieldName": "required"
            },
            {
              "name": "show-valid",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "When set will cause the control to show it is valid after reportValidity is called.",
              "fieldName": "showValid"
            },
            {
              "name": "size",
              "type": {
                "text": "SelectSize"
              },
              "default": "'md'",
              "description": "The size of the select.",
              "fieldName": "size"
            },
            {
              "name": "value",
              "type": {
                "text": "T | undefined"
              },
              "description": "The value for the select, to be used in forms.",
              "fieldName": "value"
            }
          ],
          "mixins": [
            {
              "name": "FormControlMixin",
              "package": "@sl-design-system/form"
            },
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements/lit-element.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-select",
          "customElement": true,
          "methods": [
            {
              "kind": "method",
              "name": "#onBeforetoggle",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "{ newState }",
                  "type": {
                    "text": "ToggleEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onButtonClick",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onFocusin",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onFocusout",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onKeydown",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onListboxClick",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: HTMLElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onSlotchange",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onToggle",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ToggleEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#getAllOptions",
              "return": {
                "type": {
                  "text": "Array<SelectOption<T>>"
                }
              },
              "parameters": [
                {
                  "name": "root",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "description": "Returns a flattened array of all options (also the options in groups)."
            },
            {
              "kind": "method",
              "name": "#setSelectedOption",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "option",
                  "optional": true,
                  "type": {
                    "text": "SelectOption<T>"
                  }
                },
                {
                  "name": "emitEvent",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateValueAndValidity",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "fields": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "type": {
                "text": "ScopedElementsMap"
              },
              "static": true,
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true }",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#events",
              "privacy": "private",
              "default": "new EventsController(this, {\n    focusin: this.#onFocusin,\n    focusout: this.#onFocusout\n  })",
              "description": "Events controller."
            },
            {
              "kind": "field",
              "name": "#initialState",
              "privacy": "private",
              "type": {
                "text": "T | undefined"
              },
              "description": "The initial state when the form was associated with the select. Used to reset the select."
            },
            {
              "kind": "field",
              "name": "#popoverClosing",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Since we can't use `popovertarget`, we need to monitor the closing state manually."
            },
            {
              "kind": "field",
              "name": "internals",
              "readonly": true,
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "SelectButton"
              },
              "description": "The button in the light DOM."
            },
            {
              "kind": "field",
              "name": "optionGroups",
              "type": {
                "text": "SelectOptionGroup[] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "Array<SelectOption<T>>"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "currentOption",
              "type": {
                "text": "SelectOption<T> | undefined"
              },
              "description": "The current option in the listbox. This is the option that will become the\nselected option if the user presses Enter/Space.",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "listbox",
              "type": {
                "text": "HTMLElement"
              },
              "description": "The listbox element."
            },
            {
              "kind": "field",
              "name": "selectedOption",
              "type": {
                "text": "SelectOption<T> | undefined"
              },
              "privacy": "private"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Select",
          "declaration": {
            "name": "Select",
            "module": "src/select.ts"
          }
        }
      ]
    }
  ]
}
