$sizes: sm, md, lg;

:host {
  --_toggle-padding: var(--sl-space-input-switch-padding-controller);
  --_track-radius: calc((var(--handle-size) + var(--_toggle-padding) * 2) / 2);

  --_main-background-color: var(--sl-color-input-switch-default-unchecked-default-background);
  --_handle-color: var(--sl-color-input-switch-default-unchecked-default-handle);
  --_icon-color: var(--sl-color-input-switch-default-unchecked-default-icon);

  --handle-position: 0%;
  --isLTR: 1;

  align-items: center;
  display: inline-grid;
  gap: var(--sl-space-input-switch-padding-gap);
  grid-auto-rows: minmax(0, max-content);
  grid-template-areas:
    'inputlabel toggle'
    'hint toggle';
  grid-template-columns: 1fr minmax(0, max-content);
  outline: none;
}

:host-context([dir='rtl']) {
  --isLTR: -1;
}

// setting scenario-specific variables
:host(:focus-visible) .track {
  --_box-shadow: var(--sl-box-shadow-focus);
}

@each $size in $sizes {
  :host([size='#{$size}']) {
    --handle-size: var(--sl-size-input-switch-handle-#{$size});
    --_toggle-width: var(--sl-size-input-switch-controller-width-#{$size});
    --_gap: var(--sl-space-input-gap-#{$size});
    --_inputlabel-font: var(--sl-text-input-field-label-tag-#{$size});
    --_hint-font: var(--sl-text-input-helper-text-#{$size});
  }
}

.toggle:hover {
  --_main-background-color: var(--sl-color-input-switch-default-unchecked-hover-background);
  --_handle-color: var(--sl-color-input-switch-default-unchecked-hover-handle);
  --_icon-color: var(--sl-color-input-switch-default-unchecked-hover-icon);
}

.toggle:active {
  --_main-background-color: var(--sl-color-input-switch-default-unchecked-active-background);
  --_handle-color: var(--sl-color-input-switch-default-unchecked-active-handle);
  --_icon-color: var(--sl-color-input-switch-default-unchecked-active-icon);
}

.toggle:where(:disabled, [internals-disabled]) {
  --_main-background-color: var(--sl-color-input-switch-default-unchecked-disabled-background);
  --_handle-color: var(--sl-color-input-switch-default-unchecked-disabled-handle);
  --_icon-color: var(--sl-color-input-switch-default-unchecked-disabled-icon);
}

:host([checked]) {
  .toggle {
    --_main-background-color: var(--sl-color-input-switch-default-checked-default-background);
    --_handle-color: var(--sl-color-input-switch-default-checked-default-handle);
    --_icon-color: var(--sl-color-input-switch-default-checked-default-icon);

    --handle-position: calc((var(--_toggle-width) - 100%) * var(--isLTR));
  }

  .toggle:hover {
    --_main-background-color: var(--sl-color-input-switch-default-checked-hover-background);
    --_handle-color: var(--sl-color-input-switch-default-checked-hover-handle);
    --_icon-color: var(--sl-color-input-switch-default-checked-hover-icon);
  }

  .toggle:active {
    --_main-background-color: var(--sl-color-input-switch-default-checked-active-background);
    --_handle-color: var(--sl-color-input-switch-default-checked-active-handle);
    --_icon-color: var(--sl-color-input-switch-default-checked-active-icon);
  }

  .toggle:where(:disabled, [internals-disabled]) {
    --_main-background-color: var(--sl-color-input-switch-default-checked-disabled-background);
    --_handle-color: var(--sl-color-input-switch-default-checked-disabled-handle);
    --_icon-color: var(--sl-color-input-switch-default-checked-disabled-icon);
  }
}

// applying styles

:host(:where(:disabled, [internals-disabled])) {
  cursor: default;
  pointer-events: none;
}

.inputlabel {
  cursor: pointer;
  font: var(--_inputlabel-font);
  grid-area: inputlabel;
}

.toggle {
  align-self: flex-start;
  cursor: pointer;
  grid-area: toggle;
  padding: var(--sl-space-input-switch-padding-container);
}

.track {
  background-color: var(--_main-background-color);
  border-radius: var(--_track-radius);
  box-shadow: var(--_box-shadow);
  display: inline-grid;
  padding: var(--_toggle-padding);
  transition: background-color var(--sl-animation-duration-normal) var(--sl-animation-easing-ease-in-out);
  width: var(--_toggle-width);
}

.track div {
  background-color: var(--_handle-color);
  border-radius: calc(var(--handle-size) / 2);
  display: grid;
  height: var(--handle-size);
  place-content: center;
  translate: var(--handle-position);
  width: var(--handle-size);
  will-change: transform;

  @media (prefers-reduced-motion: no-preference) {
    transition: translate var(--sl-animation-duration-normal) var(--sl-animation-easing-ease-in-out);
  }
}

.hint {
  display: contents;
  font: var(--_hint-font);
  grid-area: hint;
}

:host([orientation='vertical']) {
  grid-template-areas:
    'input-field'
    'toggle'
    'hint';

  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
}
