{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/tab-group.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/tab-panel.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/tab.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "register.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sl-tab",
          "declaration": {
            "name": "Tab",
            "module": "/src/tab.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sl-tab-group",
          "declaration": {
            "name": "TabGroup",
            "module": "/src/tab-group.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sl-tab-panel",
          "declaration": {
            "name": "TabPanel",
            "module": "/src/tab-panel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A tab group component that can contain tabs and tab panels.\n\n```html\n  <sl-tab-group>\n    <sl-tab>First tab</sl-tab>\n    <sl-tab selected>Second tab</sl-tab>\n\n    <sl-tab-panel>Content of tab 1</sl-tab-panel>\n    <sl-tab-panel>Content of tab 2</sl-tab-panel>\n  </sl-tab-group>\n```",
          "name": "TabGroup",
          "cssProperties": [
            {
              "description": "The minimum inline size of the menu.",
              "name": "--sl-tab-group-menu-min-inline-size"
            },
            {
              "description": "The maximum inline size of the menu.",
              "name": "--sl-tab-group-menu-max-inline-size"
            }
          ],
          "cssParts": [
            {
              "description": "The container for the tabs.",
              "name": "container"
            },
            {
              "description": "Wraps the scroll container and menu button.",
              "name": "wrapper"
            },
            {
              "description": "The scroll container of the tabs.",
              "name": "scroller"
            },
            {
              "description": "The tablist element which also contains the active tab indicator",
              "name": "tablist"
            },
            {
              "description": "The container for the tab panels.",
              "name": "panels"
            }
          ],
          "slots": [
            {
              "description": "Tab panels or other tab content here.",
              "name": "default"
            },
            {
              "description": "The tabs to display.",
              "name": "tabs"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "alignTabs",
              "type": {
                "text": "TabsAlignment | undefined"
              },
              "description": "The alignment of tabs within the wrapper.",
              "attribute": "align-tabs",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "menuItems",
              "type": {
                "text": "Array<{ tab: Tab; disabled?: boolean; title: string; subtitle?: string }> | undefined"
              },
              "description": "The menu items to render when the tabs are overflowing."
            },
            {
              "kind": "field",
              "name": "selectedTab",
              "type": {
                "text": "Tab | undefined"
              },
              "description": "The currently selected tab."
            },
            {
              "kind": "field",
              "name": "showMenu",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the menu button needs to be shown."
            },
            {
              "kind": "field",
              "name": "tabChangeEvent",
              "type": {
                "text": "EventEmitter<SlTabChangeEvent>"
              },
              "description": "Emits when the tab has been selected/changed."
            },
            {
              "kind": "field",
              "name": "tabPanels",
              "type": {
                "text": "TabPanel[] | undefined"
              },
              "description": "The slotted tabs."
            },
            {
              "kind": "field",
              "name": "tabs",
              "type": {
                "text": "Tab[] | undefined"
              },
              "description": "The slotted tabs."
            },
            {
              "kind": "field",
              "name": "vertical",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Renders the tabs vertically instead of the default horizontal",
              "attribute": "vertical",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "align-tabs",
              "type": {
                "text": "TabsAlignment | undefined"
              },
              "description": "The alignment of tabs within the wrapper.",
              "fieldName": "alignTabs"
            },
            {
              "name": "vertical",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Renders the tabs vertically instead of the default horizontal",
              "fieldName": "vertical"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements/lit-element.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-tab-group",
          "customElement": true,
          "methods": [
            {
              "kind": "method",
              "name": "#onClick",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: HTMLElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onKeydown",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent & { target: HTMLElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onMenuItemClick",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "tab",
                  "type": {
                    "text": "Tab"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onScroll",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: HTMLElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onTabSlotchange",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: HTMLSlotElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onTabPanelSlotchange",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: HTMLSlotElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#linkTabsWithPanels",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#scrollIntoViewIfNeeded",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "tab",
                  "type": {
                    "text": "Tab"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#scrollToTabPanelStart",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#updateSelectedTab",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "selectedTab",
                  "type": {
                    "text": "Tab"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateSelectionIndicator",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#updateSize",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "fields": [
            {
              "kind": "field",
              "name": "#idPrefix",
              "privacy": "private",
              "default": "`sl-tab-group-${nextUniqueId++}`",
              "description": "Unique prefix ID for each component in the light DOM."
            },
            {
              "kind": "field",
              "name": "#mutationObserver",
              "privacy": "private",
              "default": "new MutationObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.attributeName === 'selected' && entry.oldValue === null) {\n        this.#mutationObserver?.disconnect();\n\n        // Update the selected tab with the observer turned off to avoid loops\n        this.#updateSelectedTab(entry.target as Tab);\n\n        this.#mutationObserver?.observe(this, OBSERVER_OPTIONS);\n      }\n    });\n  })",
              "description": "Observe changes to the selected tab and update accordingly. This observer\nis necessary for changes to the selected tab that are made programmatically.\nSelected changes made by the user are handled by the click event listener."
            },
            {
              "kind": "field",
              "name": "#resizeObserver",
              "privacy": "private",
              "default": "new ResizeObserver(() => {\n    this.#shouldAnimate = false;\n    this.#updateSize();\n    this.#shouldAnimate = true;\n  })",
              "description": "Observe changes to the size of the tablist so:\n- we can determine when to display an overflow menu with tab items\n- we know when we need to reposition the active tab indicator"
            },
            {
              "kind": "field",
              "name": "#rovingTabindexController",
              "privacy": "private",
              "default": "new RovingTabindexController<Tab>(this, {\n    focusInIndex: (elements: Tab[]) => elements.findIndex(el => el.selected),\n    elements: () => this.tabs || [],\n    isFocusableElement: (el: Tab) => !el.disabled\n  })",
              "description": "Manage keyboard navigation between tabs."
            },
            {
              "kind": "field",
              "name": "#shouldAnimate",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the active tab indicator should animate."
            },
            {
              "kind": "field",
              "name": "menuItems",
              "type": {
                "text": "Array<{ tab: Tab; disabled?: boolean; title: string; subtitle?: string }> | undefined"
              },
              "description": "The menu items to render when the tabs are overflowing."
            },
            {
              "kind": "field",
              "name": "selectedTab",
              "type": {
                "text": "Tab | undefined"
              },
              "description": "The currently selected tab."
            },
            {
              "kind": "field",
              "name": "showMenu",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the menu button needs to be shown."
            },
            {
              "kind": "field",
              "name": "tabChangeEvent",
              "type": {
                "text": "EventEmitter<SlTabChangeEvent>"
              },
              "description": "Emits when the tab has been selected/changed."
            },
            {
              "kind": "field",
              "name": "tabPanels",
              "type": {
                "text": "TabPanel[] | undefined"
              },
              "description": "The slotted tabs."
            },
            {
              "kind": "field",
              "name": "tabs",
              "type": {
                "text": "Tab[] | undefined"
              },
              "description": "The slotted tabs."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabGroup",
          "declaration": {
            "name": "TabGroup",
            "module": "src/tab-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab-panel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A tab panel component, to be used with the tab group component for your tab content.\n\n```html\n  <sl-tab-panel>Content of the tab</sl-tab-panel>\n```",
          "name": "TabPanel",
          "slots": [
            {
              "description": "a place for the tab panel content.",
              "name": "default"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-tab-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabPanel",
          "declaration": {
            "name": "TabPanel",
            "module": "src/tab-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A tab component - part of the tab group component.\n\n```html\n  <sl-tab>\n    <sl-icon slot=\"icon\" name=\"star\" size=\"md\"></sl-icon>\n    Tab label\n    <span slot=\"subtitle\">Tab subtitle</span>\n    <sl-badge slot=\"badge\" size=\"lg\" variant=\"danger\">4</sl-badge>\n  </sl-tab>\n```",
          "name": "Tab",
          "slots": [
            {
              "description": "a place for the tab group content.",
              "name": "default"
            },
            {
              "description": "icon shown on the left side of the component.",
              "name": "icon"
            },
            {
              "description": "a place for badge component.",
              "name": "badge"
            },
            {
              "description": "subtitle of the tab, containing additional information",
              "name": "subtitle"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the tab item is disabled",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "When set, it will render the tab contents in a link tag. Use this when\nyou want to render the tab contents using a router and to make the tab\nnavigatable by URL.",
              "attribute": "href"
            },
            {
              "kind": "method",
              "name": "renderContent",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the tab item is selected",
              "attribute": "selected",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the tab item is disabled",
              "fieldName": "disabled"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "When set, it will render the tab contents in a link tag. Use this when\nyou want to render the tab contents using a router and to make the tab\nnavigatable by URL.",
              "fieldName": "href"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the tab item is selected",
              "fieldName": "selected"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-tab",
          "customElement": true,
          "methods": [
            {
              "kind": "method",
              "name": "renderContent",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onSlotchange",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: HTMLSlotElement }"
                  }
                }
              ]
            }
          ],
          "fields": []
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tab",
          "declaration": {
            "name": "Tab",
            "module": "src/tab.ts"
          }
        }
      ]
    }
  ]
}
