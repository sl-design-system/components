{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/tab-group.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/tab-panel.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/tab.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "register.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sl-tab",
          "declaration": {
            "name": "Tab",
            "module": "/src/tab.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sl-tab-group",
          "declaration": {
            "name": "TabGroup",
            "module": "/src/tab-group.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sl-tab-panel",
          "declaration": {
            "name": "TabPanel",
            "module": "/src/tab-panel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A tab group component that can contain tabs and tab panels.\n\n```html\n   <sl-tab-group>\n        <sl-tab selected>First tab</sl-tab>\n        <sl-tab-panel>Content of the tab 1</sl-tab-panel>\n\n        <sl-tab>Second tab</sl-tab>\n        <sl-tab-panel>Content of the tab 2</sl-tab-panel>\n   </sl-tab-group>\n```",
          "name": "TabGroup",
          "slots": [
            {
              "description": "a place for the tab group content.",
              "name": "default"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "alignment",
              "type": {
                "text": "TabsAlignment"
              },
              "default": "'start'",
              "description": "The alignment of tabs inside sl-tab-group",
              "attribute": "alignment",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "listbox",
              "type": {
                "text": "HTMLElement"
              },
              "description": "The listbox element with all tabs list."
            },
            {
              "kind": "event",
              "name": "tabChange",
              "type": {
                "text": "EventEmitter<SlTabChangeEvent>"
              },
              "description": "Emits when the tab has been selected/changed."
            },
            {
              "kind": "field",
              "name": "tabs",
              "type": {
                "text": "Tab[] | undefined"
              },
              "description": "The slotted tabs."
            },
            {
              "kind": "field",
              "name": "vertical",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Renders the tabs vertically instead of the default horizontal",
              "attribute": "vertical",
              "reflects": true
            }
          ],
          "events": [
            {
              "name": "tabChange",
              "type": {
                "text": "EventEmitter<SlTabChangeEvent>"
              },
              "description": "Emits when the tab has been selected/changed.",
              "fieldName": "tabChange"
            }
          ],
          "attributes": [
            {
              "name": "vertical",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Renders the tabs vertically instead of the default horizontal",
              "fieldName": "vertical"
            },
            {
              "name": "alignment",
              "type": {
                "text": "TabsAlignment"
              },
              "default": "'start'",
              "description": "The alignment of tabs inside sl-tab-group",
              "fieldName": "alignment"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements/lit-element.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-tab-group",
          "customElement": true,
          "methods": [
            {
              "kind": "method",
              "name": "#updateSlots",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onClick",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#setupTabs",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Apply accessible attributes and values to the tab buttons."
            },
            {
              "kind": "method",
              "name": "#setupPanels",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Apply accessible attributes and values to the tab panels."
            },
            {
              "kind": "method",
              "name": "#handleTabChange",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: HTMLElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateSelectedTab",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "selectedTab",
                  "type": {
                    "text": "Tab"
                  }
                }
              ],
              "description": "Update the selected tab button with attributes and values.\nUpdate the tab group state."
            },
            {
              "kind": "method",
              "name": "#handleKeydown",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "description": "Handle keyboard accessible controls."
            },
            {
              "kind": "method",
              "name": "#updateSelectionIndicator",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "fields": [
            {
              "kind": "field",
              "name": "scopedElements",
              "type": {
                "text": "ScopedElementsMap"
              },
              "static": true,
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#tabGroupId",
              "privacy": "private",
              "default": "`sl-tab-group-${nextUniqueId++}`",
              "description": "Unique ID for each tab group component present."
            },
            {
              "kind": "field",
              "name": "#observer",
              "privacy": "private",
              "type": {
                "text": "MutationObserver | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#rovingTabindexController",
              "privacy": "private",
              "default": "new RovingTabindexController<Tab>(this, {\n    focusInIndex: (elements: Tab[]) => elements.findIndex(el => el.selected),\n    elements: () => (isPopoverOpen(this.listbox) ? this.#allTabs : this.tabs) || [],\n    isFocusableElement: (el: Tab) => !el.disabled\n  })"
            },
            {
              "kind": "field",
              "name": "#allTabs",
              "privacy": "private",
              "type": {
                "text": "Tab[]"
              },
              "default": "[]",
              "description": "All slotted tabs."
            },
            {
              "kind": "field",
              "name": "#showMore",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether more button needs to be shown"
            },
            {
              "kind": "field",
              "name": "#moreButton",
              "privacy": "private",
              "type": {
                "text": "HTMLButtonElement"
              },
              "description": "Button used to show all tabs"
            },
            {
              "kind": "field",
              "name": "#sizeObserver",
              "privacy": "private",
              "default": "new ResizeObserver(() => {\n    this.#updateSelectionIndicator();\n  })",
              "description": "Observe the tablist width."
            },
            {
              "kind": "field",
              "name": "tabs",
              "type": {
                "text": "Tab[] | undefined"
              },
              "description": "The slotted tabs."
            },
            {
              "kind": "field",
              "name": "selectedTab",
              "type": {
                "text": "Tab | null"
              },
              "privacy": "private",
              "description": "The current tab node selected in the tab group."
            },
            {
              "kind": "field",
              "name": "selectedTabInListbox",
              "type": {
                "text": "Tab | null"
              },
              "privacy": "private",
              "description": "The current tab node selected in the tab listbox (dropdown)."
            },
            {
              "kind": "field",
              "name": "listbox",
              "type": {
                "text": "HTMLElement"
              },
              "description": "The listbox element with all tabs list."
            },
            {
              "kind": "field",
              "name": "#initialSelectedTab",
              "privacy": "private",
              "type": {
                "text": "Tab | null"
              },
              "description": "Get the selected tab button, or the first tab button.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#onToggle",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#handleMutation",
              "privacy": "private",
              "description": "If the selected tab is selected programmatically update all the tabs."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabGroup",
          "declaration": {
            "name": "TabGroup",
            "module": "src/tab-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab-panel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A tab panel component - part of the tab group component, place for a tab content.\n\n```html\n     <sl-tab-panel>\n       Content of the tab\n     </sl-tab-panel>\n```",
          "name": "TabPanel",
          "slots": [
            {
              "description": "a place for the tab panel content.",
              "name": "default"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-tab-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabPanel",
          "declaration": {
            "name": "TabPanel",
            "module": "src/tab-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A tab component - part of the tab group component.\n\n```html\n     <sl-tab>\n        <sl-icon slot=\"icon\" name=\"star\" size=\"md\"></sl-icon>\n        Tab label\n        <span slot=\"subtitle\">Tab subtitle</span>\n        <sl-badge slot=\"badge\" size=\"lg\" variant=\"danger\">4</sl-badge>\n     </sl-tab>\n```",
          "name": "Tab",
          "slots": [
            {
              "description": "a place for the tab group content.",
              "name": "default"
            },
            {
              "description": "icon shown on the left side of the component.",
              "name": "icon"
            },
            {
              "description": "a place for badge component.",
              "name": "badge"
            },
            {
              "description": "subtitle of the tab, containing additional information",
              "name": "subtitle"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the tab item is disabled",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleSelectionChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Apply accessible attributes and values to the tab button.\nObserve the selected property if it changes"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the tab item is selected",
              "attribute": "selected",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the tab item is selected",
              "fieldName": "selected"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the tab item is disabled",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-tab",
          "customElement": true,
          "methods": [
            {
              "kind": "method",
              "name": "handleSelectionChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Apply accessible attributes and values to the tab button.\nObserve the selected property if it changes"
            }
          ],
          "fields": []
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tab",
          "declaration": {
            "name": "Tab",
            "module": "src/tab.ts"
          }
        }
      ]
    }
  ]
}
