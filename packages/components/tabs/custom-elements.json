{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/tab-group.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/tab-panel.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/tab.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "register.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sl-tab",
          "declaration": {
            "name": "Tab",
            "module": "/src/tab.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sl-tab-group",
          "declaration": {
            "name": "TabGroup",
            "module": "/src/tab-group.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sl-tab-panel",
          "declaration": {
            "name": "TabPanel",
            "module": "/src/tab-panel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab-group.scss.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/tab-group.scss.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab-group.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/tab-group.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "API",
          "type": {
            "text": "StoryObj"
          },
          "default": "{\n  render: ({ vertical }) => html`\n    <style>\n      sl-tab-panel {\n        padding: 8px;\n      }\n    </style>\n    <sl-tab-group .vertical=${vertical}>\n      <sl-tab disabled>üßÅ Tab 1</sl-tab>\n      <sl-tab-panel><p>Contents tab 1</p></sl-tab-panel>\n\n      <sl-tab>üç∞ Tab 2</sl-tab>\n      <sl-tab-panel>\n        <p>Contents tab 2</p>\n        <sl-avatar></sl-avatar>\n      </sl-tab-panel>\n\n      <sl-tab>üç° Tab 3</sl-tab>\n      <sl-tab-panel><div>Contents tab 3</div></sl-tab-panel>\n\n      <sl-tab>ü•û Tab 4</sl-tab>\n      <sl-tab-panel>Contents tab 4</sl-tab-panel>\n\n      <sl-tab>üç™ Tab 5</sl-tab>\n      <sl-tab-panel>Contents tab 5</sl-tab-panel>\n    </sl-tab-group>\n  `\n}"
        },
        {
          "kind": "variable",
          "name": "LongTitles",
          "type": {
            "text": "StoryObj"
          },
          "default": "{\n  render: ({ vertical }) => html`<sl-tab-group .vertical=${vertical}>\n    <sl-tab selected>This is the first tab</sl-tab>\n    <sl-tab-panel>Contents tab 1 ${createLipsumParagraphs(4)}</sl-tab-panel>\n\n    <sl-tab>This is the second tab</sl-tab>\n    <sl-tab-panel>Contents tab 2 ${createLipsumParagraphs(3)}</sl-tab-panel>\n\n    <sl-tab>This is the third tab</sl-tab>\n    <sl-tab-panel>Contents tab 3 ${createLipsumParagraphs(2)}</sl-tab-panel>\n\n    <sl-tab disabled>This is the fourth tab (disabled)</sl-tab>\n    <sl-tab-panel>Contents tab 4</sl-tab-panel>\n\n    <sl-tab>This is the fifth tab</sl-tab>\n    <sl-tab-panel>Contents tab 5</sl-tab-panel>\n\n    <sl-tab>This is the sixth tab</sl-tab>\n    <sl-tab-panel>Contents tab 6</sl-tab-panel>\n\n    <sl-tab>This is the seventh tab</sl-tab>\n    <sl-tab-panel>Contents tab 7</sl-tab-panel>\n\n    <sl-tab>This is the eighth tab</sl-tab>\n    <sl-tab-panel>Contents tab 8</sl-tab-panel>\n\n    <sl-tab>This is the nineth tab</sl-tab>\n    <sl-tab-panel>Contents tab 9</sl-tab-panel>\n\n    <sl-tab>This is the tenth tab</sl-tab>\n    <sl-tab-panel>Contents tab 10</sl-tab-panel>\n  </sl-tab-group>`\n}"
        },
        {
          "kind": "variable",
          "name": "ExternalInteraction",
          "type": {
            "text": "StoryObj"
          },
          "default": "{\n  render: ({ vertical }) => html`\n    <sl-tab-group .vertical=${vertical} id=\"externalInteraction\" @sl-tab-change=${tabChange}>\n      <sl-tab selected>Tab 1</sl-tab>\n      <sl-tab>Tab 2</sl-tab>\n      <sl-tab>Tab 3</sl-tab>\n      <sl-tab>Tab 4</sl-tab>\n      <sl-tab>Tab 5</sl-tab>\n    </sl-tab-group>\n    <hr />\n    <sl-button @click=\"${() => activateTab(1)}\"> Activate tab 2</sl-button>\n    <sl-button @click=\"${() => activateTab(3)}\"> Activate tab 4</sl-button>\n    <h2 id=\"output\">Active tab:</h2>\n  `\n}"
        },
        {
          "kind": "variable",
          "name": "SingleTab",
          "type": {
            "text": "StoryObj"
          },
          "default": "{\n  render: ({ vertical }) => html`\n    <style>\n      sl-tab-panel {\n        padding: 8px;\n      }\n    </style>\n    <sl-tab-group .vertical=${vertical} id=\"singleTab\" @sl-tab-change=${tabChange}>\n      <sl-tab>Tab 1</sl-tab>\n      <sl-tab>Tab 2</sl-tab>\n      <sl-tab selected>Tab 3</sl-tab>\n      <sl-tab>Tab 4</sl-tab>\n      <sl-tab>Tab 5</sl-tab>\n      <sl-tab-panel>\n        <p>place your router-outlet in this panel</p>\n        <h2 id=\"output\">Active tab:</h2>\n      </sl-tab-panel>\n    </sl-tab-group>\n  `\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/tab-group.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "API",
          "declaration": {
            "name": "API",
            "module": "src/tab-group.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "LongTitles",
          "declaration": {
            "name": "LongTitles",
            "module": "src/tab-group.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ExternalInteraction",
          "declaration": {
            "name": "ExternalInteraction",
            "module": "src/tab-group.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "SingleTab",
          "declaration": {
            "name": "SingleTab",
            "module": "src/tab-group.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TabGroup",
          "members": [
            {
              "kind": "event",
              "name": "tabChange",
              "type": {
                "text": "EventEmitter<number>"
              },
              "attribute": "tabChange"
            },
            {
              "kind": "field",
              "name": "tabs",
              "type": {
                "text": "Tab[] | undefined"
              },
              "description": "The slotted tabs."
            },
            {
              "kind": "field",
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Renders the tabs vertically instead of the default horizontal",
              "attribute": "vertical",
              "reflects": true
            }
          ],
          "events": [
            {
              "name": "tabChange",
              "type": {
                "text": "EventEmitter<number>"
              },
              "fieldName": "tabChange"
            }
          ],
          "attributes": [
            {
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Renders the tabs vertically instead of the default horizontal",
              "fieldName": "vertical"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-tab-group",
          "customElement": true,
          "methods": [
            {
              "kind": "method",
              "name": "#updateSlots",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#setupTabs",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Apply accessible attributes and values to the tab buttons."
            },
            {
              "kind": "method",
              "name": "#setupPanels",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Apply accessible attributes and values to the tab panels."
            },
            {
              "kind": "method",
              "name": "#handleTabChange",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateSelectedTab",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "selectedTab",
                  "type": {
                    "text": "Tab"
                  }
                }
              ],
              "description": "Update the selected tab button with attributes and values.\nUpdate the tab group state."
            },
            {
              "kind": "method",
              "name": "#handleKeydown",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "description": "Handle keyboard accessible controls."
            },
            {
              "kind": "method",
              "name": "#updateSelectionIndicator",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "fields": [
            {
              "kind": "field",
              "name": "scopedElements",
              "type": {
                "text": "ScopedElementsMap"
              },
              "static": true,
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#tabGroupId",
              "privacy": "private",
              "default": "`sl-tab-group-${nextUniqueId++}`",
              "description": "Unique ID for each tab group component present."
            },
            {
              "kind": "field",
              "name": "#observer",
              "privacy": "private",
              "type": {
                "text": "MutationObserver | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#rovingTabindexController",
              "privacy": "private",
              "default": "new RovingTabindexController<Tab>(this, {\n    focusInIndex: (elements: Tab[]) => elements.findIndex(el => el.selected),\n    elements: () => this.tabs || [],\n    isFocusableElement: (el: Tab) => !el.disabled\n  })"
            },
            {
              "kind": "field",
              "name": "#observerOptions",
              "privacy": "private",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{\n    attributes: true,\n    subtree: true,\n    attributeFilter: ['selected'],\n    attributeOldValue: true\n  }"
            },
            {
              "kind": "field",
              "name": "tabs",
              "type": {
                "text": "Tab[] | undefined"
              },
              "description": "The slotted tabs."
            },
            {
              "kind": "field",
              "name": "selectedTab",
              "type": {
                "text": "Tab | null"
              },
              "privacy": "private",
              "description": "The current tab node selected in the tab group."
            },
            {
              "kind": "field",
              "name": "#initialSelectedTab",
              "privacy": "private",
              "type": {
                "text": "Tab | null"
              },
              "description": "Get the selected tab button, or the first tab button.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#handleMutation",
              "privacy": "private",
              "description": "If the selected tab is selected programmatically update all the tabs."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabGroup",
          "declaration": {
            "name": "TabGroup",
            "module": "src/tab-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab-panel.scss.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/tab-panel.scss.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab-panel.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/tab-panel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TabPanel",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-tab-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabPanel",
          "declaration": {
            "name": "TabPanel",
            "module": "src/tab-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab.scss.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/tab.scss.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/tab.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/tab.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Tab",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the tab item is disabled",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleSelectionChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Apply accessible attributes and values to the tab button.\nObserve the selected property if it changes"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the tab item is selected",
              "attribute": "selected",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the tab item is selected",
              "fieldName": "selected"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the tab item is disabled",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-tab",
          "customElement": true,
          "methods": [
            {
              "kind": "method",
              "name": "handleSelectionChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Apply accessible attributes and values to the tab button.\nObserve the selected property if it changes"
            }
          ],
          "fields": []
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tab",
          "declaration": {
            "name": "Tab",
            "module": "src/tab.ts"
          }
        }
      ]
    }
  ]
}
