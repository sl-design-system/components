:host {
  align-items: start;
  background: var(--sl-color-background-input-plain);
  border: var(--sl-size-borderWidth-subtle) solid var(--sl-color-border-input);
  border-radius: var(--sl-size-borderRadius-default);
  color: var(--sl-color-text-plain);
  cursor: text;
  display: flex;
  gap: var(--sl-space-100);
  outline: transparent solid var(--sl-size-outlineWidth-default);
  outline-offset: var(--sl-size-outlineOffset-default);
  position: relative;
}

:host(:focus-within) {
  outline-color: var(--sl-color-border-focused);
}

:host(:hover:not(:focus-within)) {
  background: var(--sl-color-background-input-interactive);
}

:host([show-validity='invalid']) {
  border-color: var(--sl-color-border-negative);
}

:host([show-validity='invalid']:hover:not(:focus-within)) {
  background: var(--sl-color-background-negative-subtlest);
}

:host([show-validity='valid']) ::slotted(textarea) {
  padding-inline-end: var(--sl-size-300);
}

:host([show-validity='valid']:hover:not(:focus-within)) {
  background: var(--sl-color-background-positive-subtlest);
}

:host([size='lg']) ::slotted(textarea) {
  padding-block: calc(var(--sl-space-125) - var(--sl-size-borderWidth-subtle));
}

@media (prefers-reduced-motion: no-preference) {
  :host(:where(:hover, :focus-within)) {
    transition: 200ms ease-in-out;
    transition-property: background, border, color, outline-color;
  }
}

:host([disabled]) {
  background: var(--sl-color-background-disabled);
  color: var(--sl-color-text-disabled);
  pointer-events: none;
}

slot[name='textarea']::slotted(textarea) {
  appearance: none;
  background: none;
  border: 0;
  box-sizing: content-box;
  color: currentcolor;
  flex: 1;
  font: inherit;
  margin: 0;
  min-block-size: calc(var(--sl-text-area-rows, 3) * 1lh);
  outline: none;
  padding-block: calc(var(--sl-size-075) - var(--sl-size-borderWidth-subtle));
  padding-inline: calc(var(--sl-size-150) - var(--sl-size-borderWidth-subtle));

  &:focus {
    outline: none;
  }

  &::placeholder {
    color: var(--sl-color-text-muted);
    opacity: 1;
  }
}

sl-icon,
slot[name='suffix']::slotted(sl-icon) {
  inset-block-start: calc(var(--sl-space-100) - var(--sl-size-borderWidth-subtle));
  inset-inline-end: calc(var(--sl-space-150) - var(--sl-size-borderWidth-subtle));
  position: absolute;
}

.valid-icon {
  color: var(--sl-color-icon-positive-plain);
}
