{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/text-field.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "register.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sl-text-field",
          "declaration": {
            "name": "TextField",
            "module": "/src/text-field.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/text-field.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Single line text field component.",
          "name": "TextField",
          "cssParts": [
            {
              "description": "The input's wrapper",
              "name": "wrapper"
            }
          ],
          "slots": [
            {
              "description": "Content shown before the input",
              "name": "prefix"
            },
            {
              "description": "The slot for the input element",
              "name": "input"
            },
            {
              "description": "Content shown after the input",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "typeof HTMLInputElement.prototype.autocomplete | undefined"
              },
              "description": "Specifies which type of data the browser can use to pre-fill the input.\n\nNOTE: Declare the type this way so it is backwards compatible with 4.9.5,\nwhich we still use in `@sl-design-system/angular`.",
              "attribute": "autocomplete"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the text field is disabled; when set no interaction is possible.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              },
              "description": "The input element in the light DOM."
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number | undefined"
              },
              "description": "Maximum value. Only applies to number input type.",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number | undefined"
              },
              "description": "Maximum length (number of characters).",
              "attribute": "maxlength"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number | undefined"
              },
              "description": "Minimum value. Only applies to number input type.",
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number | undefined"
              },
              "description": "Minimum length (number of characters).",
              "attribute": "minlength"
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string | undefined"
              },
              "description": "Validation using pattern. Native HTML input functionality.",
              "attribute": "pattern"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Placeholder text in the input.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether you can interact with the input or if it is just a static, readonly display.",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the text field is a required field.",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "showValid",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Indicates whether the control should indicate it is valid.",
              "attribute": "show-valid",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'md' | 'lg'"
              },
              "default": "'md'",
              "description": "The size of the input.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "event",
              "name": "sl-blur",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the `blur` event is fired on the `<input>`."
            },
            {
              "kind": "event",
              "name": "sl-change",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the `change` event is fired on the `<input>`."
            },
            {
              "kind": "event",
              "name": "sl-focus",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the `focus` event is fired on the `<input>`."
            },
            {
              "kind": "event",
              "name": "sl-input",
              "type": {
                "text": "EventEmitter<string>"
              },
              "description": "Emits when the `input` event is fired on the `<input>`."
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "description": "Specifies the interval between legal numbers for a text field. Only applies to number input type",
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'email' | 'number' | 'tel' | 'text' | 'url' | 'password'"
              },
              "default": "'text'",
              "description": "The input type. Only text types are valid here. For other types,\nsee their respective components.",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "description": "The value for the input, to be used in forms.",
              "attribute": "value"
            }
          ],
          "events": [
            {
              "name": "blurEvent",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the `blur` event is fired on the `<input>`.",
              "fieldName": "blurEvent"
            },
            {
              "name": "changeEvent",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the `change` event is fired on the `<input>`.",
              "fieldName": "changeEvent"
            },
            {
              "name": "focusEvent",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the `focus` event is fired on the `<input>`.",
              "fieldName": "focusEvent"
            },
            {
              "name": "inputEvent",
              "type": {
                "text": "EventEmitter<string>"
              },
              "description": "Emits when the `input` event is fired on the `<input>`.",
              "fieldName": "inputEvent"
            }
          ],
          "attributes": [
            {
              "name": "autocomplete",
              "type": {
                "text": "typeof HTMLInputElement.prototype.autocomplete | undefined"
              },
              "description": "Specifies which type of data the browser can use to pre-fill the input.\n\nNOTE: Declare the type this way so it is backwards compatible with 4.9.5,\nwhich we still use in `@sl-design-system/angular`.",
              "fieldName": "autocomplete"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the text field is disabled; when set no interaction is possible.",
              "fieldName": "disabled"
            },
            {
              "name": "max",
              "type": {
                "text": "number | undefined"
              },
              "description": "Maximum value. Only applies to number input type.",
              "fieldName": "max"
            },
            {
              "name": "maxlength",
              "type": {
                "text": "number | undefined"
              },
              "description": "Maximum length (number of characters).",
              "fieldName": "maxLength"
            },
            {
              "name": "min",
              "type": {
                "text": "number | undefined"
              },
              "description": "Minimum value. Only applies to number input type.",
              "fieldName": "min"
            },
            {
              "name": "minlength",
              "type": {
                "text": "number | undefined"
              },
              "description": "Minimum length (number of characters).",
              "fieldName": "minLength"
            },
            {
              "name": "pattern",
              "type": {
                "text": "string | undefined"
              },
              "description": "Validation using pattern. Native HTML input functionality.",
              "fieldName": "pattern"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Placeholder text in the input.",
              "fieldName": "placeholder"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether you can interact with the input or if it is just a static, readonly display.",
              "fieldName": "readonly"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the text field is a required field.",
              "fieldName": "required"
            },
            {
              "name": "show-valid",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Indicates whether the control should indicate it is valid.",
              "fieldName": "showValid"
            },
            {
              "name": "size",
              "type": {
                "text": "'md' | 'lg'"
              },
              "default": "'md'",
              "description": "The size of the input.",
              "fieldName": "size"
            },
            {
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "description": "Specifies the interval between legal numbers for a text field. Only applies to number input type",
              "fieldName": "step"
            },
            {
              "name": "type",
              "type": {
                "text": "'email' | 'number' | 'tel' | 'text' | 'url' | 'password'"
              },
              "default": "'text'",
              "description": "The input type. Only text types are valid here. For other types,\nsee their respective components.",
              "fieldName": "type"
            },
            {
              "name": "value",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "description": "The value for the input, to be used in forms.",
              "fieldName": "value"
            }
          ],
          "mixins": [
            {
              "name": "FormControlMixin",
              "package": "@sl-design-system/form"
            },
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements/lit-element.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-text-field",
          "customElement": true,
          "methods": [
            {
              "kind": "method",
              "name": "#onClick",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onInput",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "{ target }",
                  "type": {
                    "text": "Event & { target: HTMLInputElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onKeydown",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onSlotchange",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: HTMLSlotElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#syncInput",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "HTMLInputElement"
                  }
                }
              ]
            }
          ],
          "fields": [
            {
              "kind": "field",
              "name": "scopedElements",
              "type": {
                "text": "ScopedElementsMap"
              },
              "static": true,
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "showExternalValidityIcon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              },
              "description": "The input element in the light DOM."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextField",
          "declaration": {
            "name": "TextField",
            "module": "src/text-field.ts"
          }
        }
      ]
    }
  ]
}
