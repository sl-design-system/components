@use 'sass:list';

$sizes: md, lg;
$variants: default, valid, invalid;
$variant-selectors: ':not([show-validity])', '[show-validity="valid"]', '[show-validity="invalid"]';

:host {
  --_border-size: var(--sl-border-width-input-border);
  --_border: var(--_border-size) solid var(--_border-color);
  --_border-radius: var(--sl-border-radius-default);
  --_focus-outline: var(--sl-color-focusring-default) solid var(--sl-border-width-focusring-default);
  --_focus-outline-offset: var(--sl-border-width-focusring-offset);
  --_transition: 200ms ease-in-out;

  align-items: center;
  background: var(--_background);
  border: var(--_border);
  border-radius: var(--_border-radius);
  box-sizing: border-box;
  display: flex;
  gap: var(--_gap);
  outline-color: transparent;
  padding: var(--_padding-block) var(--_padding-inline);
  transition: var(--_transition);
  transition-property: background, border, color, filter, outline-color;
}

@each $size in $sizes {
  :host([size='#{$size}']) {
    --_gap: var(--sl-space-input-text-field-gap-#{$size});
    --_padding-block: var(--sl-space-input-text-field-block-#{$size});
    --_padding-inline: var(--sl-space-input-text-field-inline-#{$size});

    slot[name='input']::slotted(input) {
      --_font: var(--sl-text-input-text-field-text-#{$size});
    }
  }
}

@each $variant in $variants {
  $i: list.index($variants, $variant);
  $variant-selector: list.nth($variant-selectors, $i);

  :host(#{$variant-selector}) {
    --_background: var(--sl-color-input-text-field-#{$variant}-default-background);
    --_border-color: var(--sl-color-input-text-field-#{$variant}-default-border);

    slot[name='input']::slotted(input) {
      --_color: var(--sl-color-input-text-field-#{$variant}-default-input-text);
      --_placeholder-color: var(--sl-color-input-text-field-#{$variant}-default-placeholder);
    }

    slot[name='suffix'] sl-icon {
      --sl-icon-fill-default: var(--sl-color-input-text-field-#{$variant}-default-icon);
    }
  }

  :host(#{$variant-selector}:hover) {
    --_border-color: var(--sl-color-input-text-field-#{$variant}-hover-border);
    --_background: var(--sl-color-input-text-field-#{$variant}-hover-background);

    slot[name='input']::slotted(input) {
      --_color: var(--sl-color-input-text-field-#{$variant}-hover-input-text);
      --_placeholder-color: var(--sl-color-input-text-field-#{$variant}-hover-placeholder);
    }

    slot[name='suffix'] sl-icon {
      --sl-icon-fill-default: var(--sl-color-input-text-field-#{$variant}-hover-icon);
    }
  }

  :host(#{$variant-selector}:active:not([disabled])) {
    --_background: var(--sl-color-input-text-field-#{$variant}-active-background);
    --_border-color: var(--sl-color-input-text-field-#{$variant}-active-border);

    slot[name='input']::slotted(input) {
      --_color: var(--sl-color-input-text-field-#{$variant}-active-input-text);
      --_placeholder-color: var(--sl-color-input-text-field-#{$variant}-active-placeholder);
    }

    slot[name='suffix'] sl-icon {
      --sl-icon-fill-default: var(--sl-color-input-text-field-#{$variant}-active-icon);
    }
  }

  :host(#{$variant-selector}:focus-within:not([disabled])) {
    --_background: var(--sl-color-input-text-field-#{$variant}-focus-background);
    --_border-color: var(--sl-color-input-text-field-#{$variant}-focus-border);

    slot[name='input']::slotted(input) {
      --_color: var(--sl-color-input-text-field-#{$variant}-focus-input-text);
      --_placeholder-color: var(--sl-color-input-text-field-#{$variant}-focus-placeholder);
    }

    slot[name='suffix'] sl-icon {
      --sl-icon-fill-default: var(--sl-color-input-text-field-#{$variant}-focus-icon);
    }
  }

  :host(#{$variant-selector}[disabled]) {
    --_background: var(--sl-color-input-text-field-#{$variant}-disabled-background);
    --_border-color: var(--sl-color-input-text-field-#{$variant}-disabled-border);

    slot[name='input']::slotted(input) {
      --_color: var(--sl-color-input-text-field-#{$variant}-disabled-input-text);
      --_placeholder-color: var(--sl-color-input-text-field-#{$variant}-disabled-placeholder);
    }

    slot[name='suffix'] sl-icon {
      --sl-icon-fill-default: var(--sl-color-input-text-field-#{$variant}-disabled-icon);
    }
  }
}

:host([disabled]) {
  cursor: default;
  pointer-events: none;
}

:host([has-focus-ring]) {
  outline: var(--_focus-outline);
  outline-offset: var(--_focus-outline-offset);
}

:host([input-size]) {
  inline-size: fit-content;
}

slot[name='input']::slotted(input) {
  appearance: none;
  background: none;
  border: 0;
  color: var(--_color);
  flex: 1;
  font: var(--_font);
  margin: 0;
  min-inline-size: 0;
  outline: none;
  padding: 0;

  &:focus {
    outline: none;
  }

  &::placeholder {
    color: var(--_placeholder-color);
    opacity: 1;
  }
}

:is(button, ::slotted(button)) {
  align-items: center;
  appearance: none;
  aspect-ratio: 1 / 1;
  background: var(--sl-color-field-button-default-idle-background);
  block-size: calc(1lh + var(--_padding-block) * 2);
  border: 0;
  border-radius: var(--_border-radius);
  color: var(--sl-color-field-button-default-idle-foreground);
  cursor: pointer;
  display: inline-flex;
  font: var(--_font);
  justify-content: center;
  outline: 0;
  padding: 0;
  transition: var(--_transition);
  transition-property: background, color;

  &:focus-visible {
    color: var(--sl-color-field-button-default-hover-foreground);
    outline: var(--_focus-outline);
  }

  &:hover {
    background: var(--sl-color-field-button-default-hover-background);
    color: var(--sl-color-field-button-default-hover-foreground);
  }

  &:active {
    background: var(--sl-color-field-button-default-active-background);
    color: var(--sl-color-field-button-default-active-foreground);
  }

  &:disabled {
    background: var(--sl-color-field-button-default-disabled-background);
    color: var(--sl-color-field-button-default-disabled-foreground);
    cursor: default;
  }
}
