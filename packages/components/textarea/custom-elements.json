{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/textarea.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "register.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sl-textarea",
          "declaration": {
            "name": "Textarea",
            "module": "/src/textarea.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/textarea.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Multi line text area component.",
          "name": "Textarea",
          "slots": [
            {
              "description": "The slot for the textarea element",
              "name": "textarea"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "typeof HTMLTextAreaElement.prototype.autocomplete | undefined"
              },
              "description": "Specifies which type of data the browser can use to pre-fill the textarea.\n\nNOTE: Declare the type this way so it is backwards compatible with 4.9.5,\nwhich we still use in `@sl-design-system/angular`.",
              "attribute": "autocomplete"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the textarea is disabled; when set no interaction is possible.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "getLocalizedValidationMessage",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number | undefined"
              },
              "description": "Maximum length (number of characters).",
              "attribute": "maxlength"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number | undefined"
              },
              "description": "Minimum length (number of characters).",
              "attribute": "minlength"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Placeholder text in the input.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether you can interact with the textarea or if it is just a static, readonly display.",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the textarea is a required field.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "resize",
              "type": {
                "text": "ResizeType"
              },
              "default": "'vertical'",
              "description": "The way the textarea can be resized.",
              "attribute": "resize",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "number | undefined"
              },
              "description": "The number of rows the textarea should initially have.\nIf not set, the browser defaults to 2 rows.",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "showValid",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "When set will cause the control to show it is valid after reportValidity is called.",
              "attribute": "show-valid"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "TextareaSize"
              },
              "default": "'md'",
              "description": "The size of the textarea.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "event",
              "name": "sl-blur",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the focus leaves the component."
            },
            {
              "kind": "event",
              "name": "sl-change",
              "type": {
                "text": "EventEmitter<string>"
              },
              "description": "Emits when the value changes."
            },
            {
              "kind": "event",
              "name": "sl-focus",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the component gains focus."
            },
            {
              "kind": "field",
              "name": "textarea",
              "type": {
                "text": "HTMLTextAreaElement"
              },
              "description": "The textarea in the light DOM."
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The value for the textarea.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "wrap",
              "type": {
                "text": "WrapType"
              },
              "default": "'soft'",
              "description": "The way text should be wrapped during form submission.",
              "attribute": "wrap"
            }
          ],
          "events": [
            {
              "name": "blurEvent",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the focus leaves the component.",
              "fieldName": "blurEvent"
            },
            {
              "name": "changeEvent",
              "type": {
                "text": "EventEmitter<string>"
              },
              "description": "Emits when the value changes.",
              "fieldName": "changeEvent"
            },
            {
              "name": "focusEvent",
              "type": {
                "text": "EventEmitter<void>"
              },
              "description": "Emits when the component gains focus.",
              "fieldName": "focusEvent"
            }
          ],
          "attributes": [
            {
              "name": "autocomplete",
              "type": {
                "text": "typeof HTMLTextAreaElement.prototype.autocomplete | undefined"
              },
              "description": "Specifies which type of data the browser can use to pre-fill the textarea.\n\nNOTE: Declare the type this way so it is backwards compatible with 4.9.5,\nwhich we still use in `@sl-design-system/angular`.",
              "fieldName": "autocomplete"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the textarea is disabled; when set no interaction is possible.",
              "fieldName": "disabled"
            },
            {
              "name": "maxlength",
              "type": {
                "text": "number | undefined"
              },
              "description": "Maximum length (number of characters).",
              "fieldName": "maxLength"
            },
            {
              "name": "minlength",
              "type": {
                "text": "number | undefined"
              },
              "description": "Minimum length (number of characters).",
              "fieldName": "minLength"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Placeholder text in the input.",
              "fieldName": "placeholder"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether you can interact with the textarea or if it is just a static, readonly display.",
              "fieldName": "readonly"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the textarea is a required field.",
              "fieldName": "required"
            },
            {
              "name": "resize",
              "type": {
                "text": "ResizeType"
              },
              "default": "'vertical'",
              "description": "The way the textarea can be resized.",
              "fieldName": "resize"
            },
            {
              "name": "rows",
              "type": {
                "text": "number | undefined"
              },
              "description": "The number of rows the textarea should initially have.\nIf not set, the browser defaults to 2 rows.",
              "fieldName": "rows"
            },
            {
              "name": "show-valid",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "When set will cause the control to show it is valid after reportValidity is called.",
              "fieldName": "showValid"
            },
            {
              "name": "size",
              "type": {
                "text": "TextareaSize"
              },
              "default": "'md'",
              "description": "The size of the textarea.",
              "fieldName": "size"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The value for the textarea.",
              "fieldName": "value"
            },
            {
              "name": "wrap",
              "type": {
                "text": "WrapType"
              },
              "default": "'soft'",
              "description": "The way text should be wrapped during form submission.",
              "fieldName": "wrap"
            }
          ],
          "mixins": [
            {
              "name": "FormControlMixin",
              "package": "@sl-design-system/form"
            },
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements/lit-element.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sl-textarea",
          "customElement": true,
          "methods": [
            {
              "kind": "method",
              "name": "getLocalizedValidationMessage",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onInput",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "{ target }",
                  "type": {
                    "text": "Event & { target: HTMLTextAreaElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onSlotchange",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: HTMLSlotElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#setSize",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#syncTextarea",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "textarea",
                  "type": {
                    "text": "HTMLTextAreaElement"
                  }
                }
              ]
            }
          ],
          "fields": [
            {
              "kind": "field",
              "name": "scopedElements",
              "type": {
                "text": "ScopedElementsMap"
              },
              "static": true,
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true }",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#observer",
              "privacy": "private",
              "default": "new ResizeObserver(() => {\n    // Workaround for \"ResizeObserver loop completed with undelivered notifications.\"\n    requestAnimationFrame(() => this.#setSize());\n  })",
              "description": "Observe the textarea width."
            },
            {
              "kind": "field",
              "name": "showExternalValidityIcon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "textarea",
              "type": {
                "text": "HTMLTextAreaElement"
              },
              "description": "The textarea in the light DOM."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Textarea",
          "declaration": {
            "name": "Textarea",
            "module": "src/textarea.ts"
          }
        }
      ]
    }
  ]
}
