$sizes: md, lg;
$variants: default, valid, invalid;
$variant-selectors: ':not([show-validity])', '[show-validity="valid"]', '[show-validity="invalid"]';
$resize-types: none, both, horizontal, vertical, auto;

:host {
  --sl-textarea-rows: 3;
  --_border-size: var(--sl-border-width-input-border);
  --_border: var(--_border-size) solid var(--_border-color);
  --_border-radius: var(--sl-border-radius-default);
  --_transition: 200ms ease-in-out;
  --_min-height: calc(var(--sl-textarea-rows) * 1lh);
  --_focus-outline: var(--sl-color-focusring-default) solid var(--sl-border-width-focusring-default);
  --_focus-outline-offset: var(--sl-border-width-focusring-offset);
}

@each $size in $sizes {
  :host([size='#{$size}']) {
    --_font: var(--sl-text-input-text-field-text-#{$size});
    --_gap: var(--sl-space-text-field-gap-#{$size});
    --_padding: var(--sl-space-input-text-field-block-#{$size})
      calc(
        var(--sl-space-input-text-field-inline-#{$size}) +
        var(--sl-space-input-text-field-gap-#{$size}) +
        var(--sl-size-icon-#{$size})
      )
      var(--sl-space-input-text-field-block-#{$size})
      var(--sl-space-input-text-field-inline-#{$size});
    --_right: var(--sl-space-input-text-field-inline-#{$size});
    --_top: var(--sl-space-input-text-field-block-#{$size});

    // TODO: needs to be removed in the future when lh unit will be supported for Firefox as well
    @supports not (min-height: 1lh) {
      --_min-height: calc(var(--sl-textarea-rows) * var(--sl-text-typeset-line-height-#{$size}));
    }
  }
}

@each $resize in $resize-types {
  :host([resize='#{$resize}']) slot[name='textarea']::slotted(textarea) {
    @if $resize == auto {
      resize: none;
    } @else {
      resize: $resize;
    }
  }
}

@each $variant in $variants {
  $i: index($variants, $variant);
  $variant-selector: nth($variant-selectors, $i);

  :host(#{$variant-selector}) {
    --_background: var(--sl-color-input-text-field-#{$variant}-default-background);
    --_border-color: var(--sl-color-input-text-field-#{$variant}-default-border);
    --_color: var(--sl-color-input-text-field-#{$variant}-default-input-text);
    --fill-default: var(--sl-color-input-text-field-#{$variant}-default-icon);
    --_placeholder-color: var(--sl-color-input-text-field-#{$variant}-default-placeholder);
  }

  :host(#{$variant-selector}:hover) {
    --_background: var(--sl-color-input-text-field-#{$variant}-hover-background);
    --_border-color: var(--sl-color-input-text-field-#{$variant}-hover-border);
    --_color: var(--sl-color-input-text-field-#{$variant}-hover-input-text);
    --fill-default: var(--sl-color-input-text-field-#{$variant}-hover-icon);
    --_placeholder-color: var(--sl-color-input-text-field-#{$variant}-hover-placeholder);
  }

  :host(#{$variant-selector}:active:not([disabled])) {
    --_background: var(--sl-color-input-text-field-#{$variant}-active-background);
    --_border-color: var(--sl-color-input-text-field-#{$variant}-active-border);
    --_color: var(--sl-color-input-text-field-#{$variant}-active-input-text);
    --fill-default: var(--sl-color-input-text-field-#{$variant}-active-icon);
    --_placeholder-color: var(--sl-color-input-text-field-#{$variant}-active-placeholder);
  }

  :host(#{$variant-selector}:focus-within:not([disabled])) {
    --_background: var(--sl-color-input-text-field-#{$variant}-focus-background);
    --_border-color: var(--sl-color-input-text-field-#{$variant}-focus-border);
    --_color: var(--sl-color-input-text-field-#{$variant}-focus-input-text);
    --fill-default: var(--sl-color-input-text-field-#{$variant}-focus-icon);
    --_placeholder-color: var(--sl-color-input-text-field-#{$variant}-focus-placeholder);
  }

  slot[name='textarea']::slotted(textarea) {
    &:focus-visible {
      --_color: var(--sl-color-input-text-field-#{$variant}-focus-input-text);
    }
  }

  :host(#{$variant-selector}[disabled]) {
    --_background: var(--sl-color-input-text-field-#{$variant}-disabled-background);
    --_border-color: var(--sl-color-input-text-field-#{$variant}-disabled-border);
    --_color: var(--sl-color-input-text-field-#{$variant}-disabled-input-text);
    --fill-default: var(--sl-color-input-text-field-#{$variant}-disabled-icon);
    --_placeholder-color: var(--sl-color-input-text-field-#{$variant}-disabled-placeholder);
  }
}

:host {
  align-items: start;
  background: var(--_background);
  border: var(--_border);
  border-radius: var(--_border-radius);
  display: flex;
  gap: var(--_gap);
  outline-color: transparent;
  position: relative;
  transition: var(--_transition);
  transition-property: background, border, color, filter, outline-color;
  vertical-align: top;
}

:host(:focus-within) {
  outline: var(--_focus-outline);
  outline-offset: var(--_focus-outline-offset);
}

:host([disabled]) {
  cursor: default;
  pointer-events: none;
}

slot[name='textarea']::slotted(textarea) {
  appearance: none;
  background: none;
  border: 0;
  box-sizing: content-box;
  color: var(--_color);
  flex: 1;
  font: var(--_font);
  margin: 0;
  min-block-size: var(--_min-height);
  outline: none;
  padding: var(--_padding);

  &:focus {
    outline: none;
  }

  &::placeholder {
    color: var(--_placeholder-color);
    opacity: 1;
  }
}

slot[name='suffix'] sl-icon {
  --fill-default: inherit;
  position: absolute;
  right: var(--_right);
  top: var(--_top);
}
